{"version":3,"sources":["TodoList/StateButtons.jsx","TodoList/TodoList.js","mainInterface/SortDate.js","Title/Title.js","mainInterface/filterStatus.js","input/Input.js","pagination/Pagination.js","App.js","index.js"],"names":["StateButton","todo","filtered","removeItem","changeStatus","useState","name","currentTitle","setCurrentTitle","showInput","setShowInput","className","type","defaultChecked","done","onClick","value","onKeyDown","e","uuid","item","find","el","itemIndex","findIndex","keyCode","target","blur","editItem","onChange","onDoubleClick","Date","parse","createdAt","toLocaleString","TodoList","props","slice","indexOfFirstTodo","IndexOfLastTodo","map","StateButtons","uuidv4","SortDate","setFiltered","sortByDate","where","sort","a","b","date","Title","FilterStatus","todoFilter","Input","onSubmit","handleCreateTodos","handleCreate","text","required","placeholder","setText","Pagination","todosPerPage","totalTodos","paginate","pageNumbers","i","Math","ceil","push","number","select","href","App","todos","filter","setFilter","currentPage","setCurrentPage","flag","setFlag","useEffect","some","axios","get","result","data","console","log","preventDefault","post","patch","test","id","delete","length","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74275b4a.chunk.js","sourcesContent":["import \"../css/style.css\"\nimport { useState } from \"react\";\n\n\nconst StateButton = ({ todo, filtered, removeItem, changeStatus }) => {\n    const [currentTitle, setCurrentTitle] = useState(todo.name);\n    const [showInput, setShowInput] = useState(false);\n\n    const editItem = (e, currentTitle, uuid) => {\n        const item = filtered.find(el => el.uuid === uuid);\n        const itemIndex = filtered.findIndex(el => el.uuid === uuid);\n        if (e.keyCode === 13) {\n            item.name = currentTitle\n            const arr = filtered\n            arr[itemIndex] = item\n            setShowInput(false);\n        }\n        if (e.keyCode === 27) {\n            e.target.blur();\n            setShowInput(false);\n            setCurrentTitle(todo.name);\n        }\n    }\n\n\n\n    return (\n        <div key={todo.uuid}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input type=\"checkbox\" className=\"buttonComplete\" defaultChecked={todo.done === true ? true : false} onClick={() => {\n                        changeStatus(todo);\n                    }} />\n                    {\n                        (!showInput) ?\n                            <span onDoubleClick={() => setShowInput(true)}>{currentTitle}</span>\n                            :\n                            <input value={currentTitle}\n                                onKeyDown={(e) => editItem(e, currentTitle, todo.uuid)}\n                                className=\"sideInput\"\n                                onChange={(e) => setCurrentTitle(e.target.value)} />\n                    }\n                </div>\n                <div className=\"inElement\">\n                    <div>{new Date(Date.parse(todo.createdAt)).toLocaleString()}</div>\n                    <input type=\"button\" value=\"🗑\" className=\"buttonDelete\" onClick={() => {\n                        removeItem(todo.uuid);\n                    }} />\n                </div>\n            </div>\n        </div >\n    )\n}\n\n\nexport default StateButton;","import React from 'react';\nimport StateButtons from \"../TodoList/StateButtons\"\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TodoList = (props) => {\n    return (\n        <div className=\"todoList\">{\n            props.filtered.slice(props.indexOfFirstTodo, props.IndexOfLastTodo).map(todo => (\n                <div key={uuidv4()}>\n                    <StateButtons\n                        removeItem={props.removeItem}\n                        todo={todo}\n                        filtered={props.filtered}\n                        changeStatus={props.changeStatus}\n                    />\n                </div>))\n        }</div>\n    );\n}\n\nexport default TodoList;","import React from 'react';\n\nconst SortDate = ({ setFiltered, filtered }) => {\n    const sortByDate = (where) => {\n        if (where === 'Up') {\n            setFiltered(filtered => [...filtered].sort((a, b) => {\n                if (a.date > b.date) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }));\n        } else {\n            setFiltered(filtered => [...filtered].sort((a, b) => {\n                if (a.date < b.date) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }));\n        }\n    }\n\n    return (\n        <div className=\"saideInterface\">\n            <h4>Sort by date:</h4>\n            <button className=\"arrows\" type=\"button\" onClick={() => {\n                sortByDate(\"Up\");\n            }}>⤊</button>\n            <button className=\"arrows\" type=\"button\" onClick={() => {\n                sortByDate(\"Down\");\n            }}>⤋</button>\n        </div>\n    );\n\n}\n\nexport default SortDate;","const Title = () => {\n    return (\n        <div className=\"title\">\n            <h1>ToDo:</h1>\n        </div>\n    )\n\n}\n\nexport default Title;","import React from 'react';\n\nconst FilterStatus = (props) => {\n    return (\n        <div>\n            <button type=\"button\" className=\"buttons\" onClick={() => props.todoFilter(\"\")}\n            >All</button>\n            <button type=\"button\" className=\"buttons\" onClick={() => props.todoFilter(\"done\")}\n            >Done</button>\n            <button type=\"button\" className=\"buttons\" onClick={() => props.todoFilter(\"undone\")}\n            >Undone</button>\n        </div>\n    )\n}\nexport default FilterStatus;","const Input = (props) => {\n    const handleCreate = (e, name) => {\n        props.handleCreateTodos(e, name)\n    }\n    return (\n        <form onSubmit={(e) => handleCreate(e, props.text)}>\n            <div className=\"mainInput\">\n                <input\n                    type=\"text\"\n                    required\n                    placeholder=\"I want to...\"\n                    value={props.text}\n                    onChange={(e) => props.setText(e.target.value)}\n                    className=\"input\"\n                ></input>\n            </div>\n        </form>\n    )\n}\n\nexport default Input;","import React from 'react';\n\nconst Pagination = ({ todosPerPage, totalTodos, paginate }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= (Math.ceil(totalTodos / todosPerPage)); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <div>\n            <div className=\"mainSelect\">\n                {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"}\n            </div>\n        </div>\n    )\n}\n\nexport default Pagination;","import './App.css';\nimport TodoList from './TodoList/TodoList';\nimport { useState, useEffect } from 'react';\nimport SortDate from './mainInterface/SortDate';\nimport Title from './Title/Title';\nimport FilterStatus from './mainInterface/filterStatus';\nimport Input from './input/Input';\nimport Pagination from './pagination/Pagination';\nimport axios from 'axios';\n\nconst App = () => {\n  const [todos] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [filter, setFilter] = useState(\"undone\");\n  const [filtered, setFiltered] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [flag, setFlag] = useState(false);\n  const todosPerPage = 5;\n  useEffect(() => {\n    some();\n  }, [todos, filter, flag])\n\n  const some = async () => {\n    try {\n      const href = `https://todo-api-learning.herokuapp.com/v1/tasks/3?${filter ? `filterBy=${filter}` : ''}&order=asc`\n      const result = await axios.get(href);\n      setFiltered(result.data)\n    } catch (err) {\n      console.log(err, 'err');\n    }\n  }\n\n  const handleCreateTodos = async (e, name) => {\n    try {\n      e.preventDefault();\n      await axios.post(\"https://todo-api-learning.herokuapp.com/v1/task/3\", { name: name, done: false })\n      setFlag(!flag)\n      setText(\"\");\n    } catch (res) {\n      console.log(\"err\");\n    }\n  }\n\n\n  const todoFilter = (todo) => setFilter(todo);\n\n\n  const date = () => {\n    const date = new Date();\n    return date.getDate() + '.' + date.getMonth() + '.' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n  }\n\n  const changeStatus = async (todo) => {\n    try {\n      let test = await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/3/${todo.uuid}`, { name: todo.name, done: !todo.done });\n      some();\n      console.log('-----------------');\n      console.log(test.data);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const IndexOfLastTodo = currentPage * todosPerPage;\n  const indexOfFirstTodo = IndexOfLastTodo - todosPerPage;\n\n  const removeItem = async (id) => {\n    try {\n      await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/3/${id}`);\n      if ((filtered.length % 6 === 0) && filtered.length) {\n        setCurrentPage(currentPage - 1);\n      }\n      setFlag(!flag);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n  return (\n    <div className=\"container\">\n      <Title />\n      <div className=\"mainInput\">\n        <Input\n          text={text}\n          setText={setText}\n          handleCreateTodos={handleCreateTodos} />\n      </div>\n      <div className=\"mainInterface\">\n        <FilterStatus todoFilter={todoFilter} />\n        <SortDate\n          date={date}\n          filtered={filtered}\n          setFiltered={setFiltered} />\n      </div>\n      <div className=\"todoList\">\n        <TodoList\n          filtered={filtered}\n          IndexOfLastTodo={IndexOfLastTodo}\n          indexOfFirstTodo={indexOfFirstTodo}\n          removeItem={removeItem}\n          changeStatus={changeStatus}\n        />\n      </div>\n      <Pagination\n        todosPerPage={todosPerPage}\n        totalTodos={filtered.length}\n        paginate={paginate} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport \"../src/css/style.css\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["TodoList/StateButtons.jsx","TodoList/TodoList.js","mainInterface/SortDate.js","Title/Title.js","mainInterface/filterStatus.js","input/Input.js","pagination/Pagination.js","App.js","index.js"],"names":["StateButton","todo","removeItem","changeStatus","getTodos","useState","name","currentTitle","setCurrentTitle","showInput","setShowInput","editItem","e","a","keyCode","axios","patch","uuid","done","target","blur","console","log","alert","className","type","defaultChecked","onClick","value","onKeyDown","onChange","onDoubleClick","Date","parse","updatedAtt","toLocaleString","TodoList","props","filtered","map","StateButtons","IndexOfLastTodo","indexOfFirstTodo","SortDate","setFiltered","sortByDate","where","sort","b","date","Title","FilterStatus","setFilter","todoFilter","Input","onSubmit","handleCreateTodos","handleCreate","text","required","placeholder","setText","Paginate","todosPerPage","numbersOfTodos","setCurrentPage","currentPage","pageNumbers","i","Math","ceil","push","pag","number","pagination","req","err","select","href","API_GET_TODOS","App","filter","setNumbersOfTodos","useEffect","filterForQuery","get","result","data","info","count","preventDefault","post","resault","delete","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5590ce9a.chunk.js","sourcesContent":["import \"../css/style.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst API_GET_TODOS = \"https://back-end-api-1.herokuapp.com/api/todos\";\n\nconst StateButton = ({ todo, removeItem, changeStatus, getTodos }) => {\n    const [currentTitle, setCurrentTitle] = useState(todo.name);\n    const [showInput, setShowInput] = useState(false);\n\n    const editItem = async (e, currentTitle) => {\n        try {\n            if (e.keyCode === 13) {\n                await axios.patch(API_GET_TODOS + `/${todo.uuid}`, {\n                    name: currentTitle,\n                    done: todo.done === \"done\" ? \"done\" : \"undone\",\n                });\n                e.target.blur();\n                setShowInput(false);\n            }\n            if (e.keyCode === 27) {\n                e.target.blur();\n                setShowInput(false);\n                setCurrentTitle(todo.name);\n            }\n            getTodos();\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    return (\n        <div key={todo.uuid}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"buttonComplete\"\n                        defaultChecked={todo.done === true ? true : false}\n                        onClick={() => {\n                            changeStatus(todo);\n                        }}\n                    />\n                    {!showInput ? (\n                        <span onDoubleClick={() => setShowInput(true)}>\n                            {currentTitle}\n                        </span>\n                    ) : (\n                        <input\n                            value={currentTitle}\n                            onKeyDown={(e) =>\n                                editItem(e, currentTitle, todo.uuid)\n                            }\n                            className=\"sideInput\"\n                            onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    )}\n                </div>\n                <div className=\"inElement\">\n                    <div>\n                        {new Date(Date.parse(todo.updatedAtt)).toLocaleString()}\n                    </div>\n                    <input\n                        type=\"button\"\n                        value=\"🗑\"\n                        className=\"buttonDelete\"\n                        onClick={() => {\n                            removeItem(todo.uuid);\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StateButton;\n","import React from \"react\";\nimport StateButtons from \"../TodoList/StateButtons\";\n\nconst TodoList = (props) => {\n    return (\n        <div className=\"todoList\">\n            {props.filtered.map((todo) => (\n                <div key={todo.uuid}>\n                    <StateButtons\n                        removeItem={props.removeItem}\n                        todo={todo}\n                        changeStatus={props.changeStatus}\n                        getTodos={props.getTodos}\n                        IndexOfLastTodo={props.IndexOfLastTodo}\n                        indexOfFirstTodo={props.indexOfFirstTodo}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default TodoList;\n","import React from 'react';\n\nconst SortDate = ({ setFiltered, filtered }) => {\n    const sortByDate = (where) => {\n        if (where === 'Up') {\n            setFiltered(filtered => [...filtered].sort((a, b) => {\n                if (a.date > b.date) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }));\n        } else {\n            setFiltered(filtered => [...filtered].sort((a, b) => {\n                if (a.date < b.date) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }));\n        }\n    }\n\n    return (\n        <div className=\"saideInterface\">\n            <h4>Sort by date:</h4>\n            <button className=\"arrows\" type=\"button\" onClick={() => {\n                sortByDate(\"Up\");\n            }}>⤊</button>\n            <button className=\"arrows\" type=\"button\" onClick={() => {\n                sortByDate(\"Down\");\n            }}>⤋</button>\n        </div>\n    );\n\n}\n\nexport default SortDate;","const Title = () => {\n    return (\n        <div className=\"title\">\n            <h1>ToDo:</h1>\n        </div>\n    )\n\n}\n\nexport default Title;","import React from 'react';\n\nconst FilterStatus = ({ setFilter }) => {\n    const todoFilter = (todo) => {\n        setFilter(todo);\n    }\n    return (\n        <div>\n            <button type=\"button\" className=\"buttons\" onClick={() => todoFilter(\"\")}\n            >All</button>\n            <button type=\"button\" className=\"buttons\" onClick={() => todoFilter(\"done\")}\n            >Done</button>\n            <button type=\"button\" className=\"buttons\" onClick={() => todoFilter(\"undone\")}\n            >Undone</button>\n        </div>\n    )\n}\nexport default FilterStatus;","const Input = (props) => {\n    const handleCreate = (e, name) => {\n        props.handleCreateTodos(e, name);\n    };\n    return (\n        <form onSubmit={(e) => handleCreate(e, props.text)}>\n            <div className=\"mainInput\">\n                <input\n                    type=\"text\"\n                    required\n                    placeholder=\"I want to...\"\n                    value={props.text}\n                    onChange={(e) => props.setText(e.target.value)}\n                    className=\"input\"\n                ></input>\n            </div>\n        </form>\n    );\n};\n\nexport default Input;\n","import React from 'react';\n\nconst Paginate = ({ todosPerPage, numbersOfTodos, setCurrentPage, getTodos, currentPage }) => {\n    console.log(currentPage);\n    const pageNumbers = [];\n    for (let i = 1; i <= (Math.ceil(numbersOfTodos / todosPerPage)); i++) {\n        pageNumbers.push(i);\n    }\n\n    const pag = (number) => {\n        setCurrentPage(number);\n        pagination();\n    }\n    const pagination = async (req) => {\n        try {\n            getTodos();\n        }\n        catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    }\n    console.log(currentPage);\n    console.log(numbersOfTodos);\n    return (\n        <div>\n            <div className=\"mainSelect\">\n                {numbersOfTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { pag(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => pag(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { pag(Math.ceil(numbersOfTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"}\n            </div>\n        </div>\n    )\n}\n\nexport default Paginate;\n\n\n\n","import \"./App.css\";\nimport TodoList from \"./TodoList/TodoList\";\nimport { useState, useEffect } from \"react\";\nimport SortDate from \"./mainInterface/SortDate\";\nimport Title from \"./Title/Title\";\nimport FilterStatus from \"./mainInterface/filterStatus\";\nimport Input from \"./input/Input\";\nimport Paginate from \"./pagination/Pagination\";\nimport axios from \"axios\";\nconst API_GET_TODOS = \"https://back-end-api-1.herokuapp.com/api/todos\";\nconst App = () => {\n    const [text, setText] = useState(\"\");\n    const [filter, setFilter] = useState(\"\");\n    const [filtered, setFiltered] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [numbersOfTodos, setNumbersOfTodos] = useState();\n    const todosPerPage = 5;\n    useEffect(() => {\n        getTodos();\n    }, [filter, currentPage]);\n\n    const getTodos = async () => {\n        const filterForQuery = filter && `filterBy=${filter}`;\n        try {\n            const href =\n                API_GET_TODOS + `?${filterForQuery}&page=${currentPage}&order=asc`;\n            const result = await axios.get(href);\n            setFiltered(result.data.info);\n            setNumbersOfTodos(result.data.count);\n        } catch (err) {\n            alert(err);\n        }\n    };\n    const handleCreateTodos = async (e, name) => {\n        try {\n            e.preventDefault();\n            await axios.post(API_GET_TODOS, {\n                name: name,\n                done: \"undone\",\n            });\n            getTodos();\n            setText(\"\");\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    const changeStatus = async (todo) => {\n        try {\n            const resault = await axios.patch(API_GET_TODOS + `/${todo.uuid}`, {\n                name: todo.name,\n                done: todo.done === \"done\" ? \"undone\" : \"done\",\n            });\n            console.log(resault);\n            // setCurrentPage(resault.info.page);\n            getTodos();\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    const removeItem = async (uuid) => {\n        try {\n            await axios.delete(API_GET_TODOS + `/${uuid}`);\n            await getTodos();\n            console.log(filtered);\n            if (filtered.length - 1 === 0 && currentPage > 1) {\n                setCurrentPage(currentPage - 1);\n            }\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    const IndexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = IndexOfLastTodo - todosPerPage;\n\n    return (\n        <div className=\"container\">\n            <Title />\n            <div className=\"mainInput\">\n                <Input\n                    text={text}\n                    setText={setText}\n                    handleCreateTodos={handleCreateTodos}\n                />\n            </div>\n            <div className=\"mainInterface\">\n                <FilterStatus setFilter={setFilter} />\n                <SortDate filtered={filtered} setFiltered={setFiltered} />\n            </div>\n            <div className=\"todoList\">\n                <TodoList\n                    filtered={filtered}\n                    removeItem={removeItem}\n                    changeStatus={changeStatus}\n                    getTodos={getTodos}\n                    IndexOfLastTodo={IndexOfLastTodo}\n                    indexOfFirstTodo={indexOfFirstTodo}\n                />\n            </div>\n            <Paginate\n                todosPerPage={todosPerPage}\n                numbersOfTodos={numbersOfTodos}\n                setCurrentPage={setCurrentPage}\n                getTodos={getTodos}\n                currentPage={currentPage}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport \"../src/css/style.css\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
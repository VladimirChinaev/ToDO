{"version":3,"sources":["TodoList/StateButtons.jsx","TodoList/TodoList.js","mainInterface/SortDate.js","Title/Title.js","mainInterface/filterStatus.js","input/Input.js","pagination/Pagination.js","App.js","index.js"],"names":["StateButton","todo","setTodos","filtered","changeStatus","useState","title","currentTitle","setCurrentTitle","className","type","defaultChecked","status","onChange","newStatus","id","value","onKeyDown","e","item","find","el","itemIndex","findIndex","keyCode","arr","target","blur","editItem","date","onClick","prevState","filter","props","TodoList","slice","indexOfFirstTodo","IndexOfLastTodo","map","StateButtons","removeItem","todos","setText","text","uuidv4","SortDate","setFiltered","sortByDate","where","sort","a","b","Title","FilterStatus","todoFilter","Input","inputText","setinputText","onSubmit","name","handleChangeTodos","handleCreate","required","placeholder","Pagination","todosPerPage","totalTodos","paginate","pageNumbers","i","Math","ceil","push","number","select","href","App","setFilter","currentPage","setCurrentPage","useEffect","filteredTodos","preventDefault","replace","trim","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","allTodos","todoIndex","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a166a74a.chunk.js","sourcesContent":["import \"../css/style.css\"\nimport { useState } from \"react\";\n\n\nconst StateButton = ({ todo, setTodos, filtered, changeStatus }) => {\n    const [currentTitle, setCurrentTitle] = useState(todo.title);\n\n    const editItem = (e, currentTitle, id) => {\n        const item = filtered.find(el => el.id === id);\n\n        const itemIndex = filtered.findIndex(el => el.id === id);\n        if (e.keyCode === 13) {\n            item.title = currentTitle\n            const arr = filtered\n            arr[itemIndex] = item\n            setTodos(arr);\n        }\n        if (e.keyCode === 27) {\n            e.target.blur();\n            setCurrentTitle(todo.title)\n        }\n\n    }\n\n    const removeItem = (id) => {\n        setTodos((prevState) =>\n            prevState.filter((props) => {\n                return props.id !== id;\n            })\n        );\n    };\n\n    return (\n        <div key={todo.id}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input type=\"checkbox\" className=\"buttonComplete\" defaultChecked={todo.status === \"Done\" ? true : false} onChange={() => {\n                        let newStatus\n                        if (todo.status === \"Done\") {\n                            newStatus = \"Undone\";\n                        } else {\n                            newStatus = \"Done\"\n                        }\n                        changeStatus(newStatus, todo.id)\n                    }} />\n                    <div>\n                        <input value={currentTitle} onKeyDown={(e) => editItem(e, currentTitle, todo.id)} className=\"sideInput\" onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"inElement\">\n                    <div>{todo.date}</div>\n                    <input type=\"button\" value=\"🗑\" className=\"buttonDelete\" onClick={() => {\n                        removeItem(todo.id);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default StateButton;","import React from 'react';\nimport StateButtons from \"../TodoList/StateButtons\"\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TodoList = (props) => {\n    return (\n        <div className=\"todoList\">{\n            props.filtered.slice(props.indexOfFirstTodo, props.IndexOfLastTodo).map(todo => (\n                <div key={uuidv4()}>\n                    <StateButtons\n                        removeItem={props.removeItem}\n                        setTodos={props.setTodos}\n                        todos={props.todos}\n                        setText={props.setText}\n                        text={props.text}\n                        changeStatus={props.changeStatus}\n                        todo={todo}\n                        filtered={props.filtered}\n                    />\n                </div>))\n        }</div>\n    );\n}\n\nexport default TodoList;","import React from 'react';\n\nconst SortDate = ({ setFiltered, filtered }) => {\n    const sortByDate = (where) => {\n        if (where === 'Up') {\n            setFiltered(filtered => [...filtered].sort((a, b) => {\n                if (a.date > b.date) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }));\n        } else {\n            setFiltered(filtered => [...filtered].sort((a, b) => {\n                if (a.date < b.date) {\n                    return 1;\n                } else {\n                    return -1;\n                }\n            }));\n        }\n    }\n\n    return (\n        <div className=\"saideInterface\">\n            <h4>Sort by date:</h4>\n            <button className=\"arrows\" type=\"button\" onClick={() => {\n                sortByDate(\"Up\");\n            }}>⤊</button>\n            <button className=\"arrows\" type=\"button\" onClick={() => {\n                sortByDate(\"Down\");\n            }}>⤋</button>\n        </div>\n    );\n\n}\n\nexport default SortDate;","const Title = () => {\n    return (\n        <div className=\"title\">\n            <h1>ToDo:</h1>\n        </div>\n    )\n\n}\n\nexport default Title;","import React from 'react';\n\nconst FilterStatus = (props) => {\n    return (\n        <div>\n            <button type=\"button\" className=\"buttons\" onClick={() => props.todoFilter(\"All\")}\n            >All</button>\n            <button type=\"button\" className=\"buttons\" onClick={() => props.todoFilter(\"Done\")}\n            >Done</button>\n            <button type=\"button\" className=\"buttons\" onClick={() => props.todoFilter(\"Undone\")}\n            >Undone</button>\n        </div>\n    )\n}\nexport default FilterStatus;","import { useState } from \"react\";\nconst Input = (props) => {\n    const [inputText, setinputText] = useState('')\n    const handleCreate = (e, name) => {\n        props.handleChangeTodos(e, name)\n        setinputText('')\n    }\n    return (\n        <form onSubmit={(e) => handleCreate(e, inputText)}>\n            <div className=\"mainInput\">\n                <input\n                    type=\"text\"\n                    required\n                    placeholder=\"I want to...\"\n                    value={inputText}\n                    onChange={(e) => setinputText(e.target.value)}\n                    className=\"input\"\n                ></input>\n            </div>\n        </form>\n    )\n}\n\nexport default Input;","import React from 'react';\n\nconst Pagination = ({ todosPerPage, totalTodos, paginate }) => {\n    const pageNumbers = [];\n    for (let i = 1; i <= (Math.ceil(totalTodos / todosPerPage)); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <div>\n            <div className=\"mainSelect\">\n                <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                {pageNumbers.map((number => (\n                    <div key={number} select>\n                        <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                            {number}\n                        </button>\n                    </div>\n                )))}\n                <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Pagination;","import './App.css';\nimport TodoList from './TodoList/TodoList';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport SortDate from './mainInterface/SortDate';\nimport Title from './Title/Title';\nimport FilterStatus from './mainInterface/filterStatus';\nimport Input from './input/Input';\nimport Pagination from './pagination/Pagination';\n\n\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [filter, setFilter] = useState(\"Undone\");\n  const [filtered, setFiltered] = useState(todos);\n  const [currentPage, setCurrentPage] = useState(1);\n  const todosPerPage = 5;\n  useEffect(() => {\n    let filteredTodos;\n    if (filter === \"All\") {\n      filteredTodos = todos;\n    } else {\n      filteredTodos = todos.filter(todos => todos.status === filter);\n    }\n    setFiltered(filteredTodos);\n  }, [todos, filter])\n\n  const handleChangeTodos = (e, name) => {\n    e.preventDefault();\n    if (name.replace(/\\s+/g, ' ').trim() !== '') {\n      const item = { id: uuidv4(), title: name.replace(/\\s+/g, ' ').trim(), date: date(), status: \"Undone\" }\n      setTodos([...todos, item]);\n    }\n    setText(\"\");\n  }\n\n  const todoFilter = (status) => {\n    setFilter(status);\n  }\n\n  const date = () => {\n    const date = new Date();\n    return date.getDate() + '.' + date.getMonth() + '.' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n  }\n\n  const changeStatus = (newStatus, id) => {\n    const allTodos = todos;\n    const todo = todos.find((todo) => todo.id === id)\n    const todoIndex = todos.findIndex((todo) => todo.id === id)\n    todo.status = newStatus;\n    allTodos[todoIndex] = todo;\n    setTodos(allTodos);\n  }\n\n  const IndexOfLastTodo = currentPage * todosPerPage;\n  const indexOfFirstTodo = IndexOfLastTodo - todosPerPage;\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"container\">\n      <Title />\n      <div className=\"mainInput\">\n        <Input text={text} setText={setText} handleChangeTodos={handleChangeTodos} />\n      </div>\n      <div className=\"mainInterface\">\n        <FilterStatus todoFilter={todoFilter} />\n        <SortDate date={date} filtered={filtered} setFiltered={setFiltered} />\n      </div>\n      <div className=\"todoList\">\n        <TodoList\n          todos={todos} setTodos={setTodos} text={text}\n          setText={setText} handleChangeTodos={handleChangeTodos} filtered={filtered}\n          todoFilter={todoFilter} changeStatus={changeStatus} setFiltered={setFiltered}\n          IndexOfLastTodo={IndexOfLastTodo} indexOfFirstTodo={indexOfFirstTodo}\n        />\n      </div>\n      <Pagination todosPerPage={todosPerPage} totalTodos={filtered.length} paginate={paginate} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from './App';\nimport \"../src/css/style.css\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
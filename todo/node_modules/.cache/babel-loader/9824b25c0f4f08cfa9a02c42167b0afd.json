{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js\";\nimport React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginate = (filter, totalTodos, todosPerPage) => {\n  const pages = Math.ceil(totalTodos / todosPerPage);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 10,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inSelect\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: 10,\n        showFirstButton: true,\n        showLastButton: true,\n        color: \"primary\",\n        page: page,\n        defaultPage: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Paginate;\nexport default Paginate;\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js"],"names":["React","Pagination","Stack","Paginate","filter","totalTodos","todosPerPage","pages","Math","ceil","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,UAAT,EAAqBC,YAArB,KAAsC;AACnD,QAAMC,KAAK,GAAIC,IAAI,CAACC,IAAL,CAAUJ,UAAU,GAAGC,YAAvB,CAAf;AACA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAE,EAAhB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE,EAAnB;AAAuB,QAAA,eAAe,MAAtC;AAAuC,QAAA,cAAc,MAArD;AAAsD,QAAA,KAAK,EAAC,SAA5D;AAAsE,QAAA,IAAI,EAAEI,IAA5E;AAAkF,QAAA,WAAW,EAAE;AAA/F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVD;;KAAMP,Q;AAYN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\nconst Paginate = (filter, totalTodos, todosPerPage) => {\n    const pages = (Math.ceil(totalTodos / todosPerPage))\n    return (\n        <Stack spacing={10}>\n            <div className=\"inSelect\">\n                <Pagination count={10} showFirstButton showLastButton color=\"primary\" page={page} defaultPage={1} />\n            </div>\n        </Stack>\n\n    )\n}\n\nexport default Paginate;\n\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */"]},"metadata":{},"sourceType":"module"}
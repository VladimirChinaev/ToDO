{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport TodoList from \"./TodoList/TodoList\";\nimport { useState, useEffect } from \"react\";\nimport SortDate from \"./mainInterface/SortDate\";\nimport Title from \"./Title/Title\";\nimport FilterStatus from \"./mainInterface/filterStatus\";\nimport Input from \"./input/Input\";\nimport Paginate from \"./pagination/Pagination\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_GET_TODOS = \"https://back-end-api-1.herokuapp.com/api/todos\";\n\nconst App = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [filtered, setFiltered] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [numbersOfTodos, setNumbersOfTodos] = useState();\n  const todosPerPage = 5;\n  console.log(currentPage);\n  useEffect(() => {\n    getTodos();\n  }, [filter, currentPage]);\n\n  const getTodos = async () => {\n    const filterForQuery = filter && `filterBy=${filter}`;\n\n    try {\n      const href = API_GET_TODOS + `?${filterForQuery}&page=${currentPage}&order=asc`;\n      console.log(href);\n      const result = await axios.get(href);\n      console.log(\"1111111111111111111111111111\", result.data.data);\n      setFiltered(result.data.data);\n      console.log(\"222222222222222222222222222222\", result);\n      setNumbersOfTodos(result.data);\n      console.log(filtered);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  console.log(\"132141254135133513412312312312\", filtered);\n\n  const handleCreateTodos = async (e, name) => {\n    try {\n      e.preventDefault();\n      await axios.post(API_GET_TODOS, {\n        name: name,\n        done: \"undone\"\n      });\n      getTodos();\n      setText(\"\");\n    } catch (err) {\n      console.log(err);\n      alert(err);\n    }\n  };\n\n  const changeStatus = async todo => {\n    try {\n      const resault = await axios.patch(API_GET_TODOS + `/${todo.uuid}`, {\n        name: todo.name,\n        done: todo.done === \"done\" ? \"undone\" : \"done\"\n      });\n      setCurrentPage(resault.data);\n      getTodos();\n    } catch (err) {\n      console.log(err);\n      alert(err);\n    }\n  };\n\n  const removeItem = async uuid => {\n    try {\n      await axios.delete(API_GET_TODOS + `/${uuid}`);\n      await getTodos();\n    } catch (err) {\n      console.log(err);\n      alert(err);\n    }\n  };\n\n  const IndexOfLastTodo = currentPage * todosPerPage;\n  const indexOfFirstTodo = IndexOfLastTodo - todosPerPage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainInput\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        text: text,\n        setText: setText,\n        handleCreateTodos: handleCreateTodos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainInterface\",\n      children: [/*#__PURE__*/_jsxDEV(FilterStatus, {\n        setFilter: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SortDate, {\n        filtered: filtered,\n        setFiltered: setFiltered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: /*#__PURE__*/_jsxDEV(TodoList, {\n        filtered: filtered,\n        removeItem: removeItem,\n        changeStatus: changeStatus,\n        getTodos: getTodos,\n        IndexOfLastTodo: IndexOfLastTodo,\n        indexOfFirstTodo: indexOfFirstTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n      todosPerPage: todosPerPage,\n      numbersOfTodos: numbersOfTodos,\n      setCurrentPage: setCurrentPage,\n      getTodos: getTodos,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"a4dTDos84sMCdfSPE3Xji5oynKQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/App.js"],"names":["TodoList","useState","useEffect","SortDate","Title","FilterStatus","Input","Paginate","axios","API_GET_TODOS","App","text","setText","filter","setFilter","filtered","setFiltered","currentPage","setCurrentPage","numbersOfTodos","setNumbersOfTodos","todosPerPage","console","log","getTodos","filterForQuery","href","result","get","data","err","alert","handleCreateTodos","e","name","preventDefault","post","done","changeStatus","todo","resault","patch","uuid","removeItem","delete","IndexOfLastTodo","indexOfFirstTodo"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport TodoList from \"./TodoList/TodoList\";\nimport { useState, useEffect } from \"react\";\nimport SortDate from \"./mainInterface/SortDate\";\nimport Title from \"./Title/Title\";\nimport FilterStatus from \"./mainInterface/filterStatus\";\nimport Input from \"./input/Input\";\nimport Paginate from \"./pagination/Pagination\";\nimport axios from \"axios\";\nconst API_GET_TODOS = \"https://back-end-api-1.herokuapp.com/api/todos\";\nconst App = () => {\n    const [text, setText] = useState(\"\");\n    const [filter, setFilter] = useState(\"\");\n    const [filtered, setFiltered] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [numbersOfTodos, setNumbersOfTodos] = useState();\n    const todosPerPage = 5;\n    console.log(currentPage);\n    useEffect(() => {\n        getTodos();\n    }, [filter, currentPage]);\n\n    const getTodos = async () => {\n        const filterForQuery = filter && `filterBy=${filter}`;\n        try {\n            const href =\n                API_GET_TODOS + `?${filterForQuery}&page=${currentPage}&order=asc`;\n            console.log(href);\n            const result = await axios.get(href);\n            console.log(\"1111111111111111111111111111\", result.data.data);\n            setFiltered(result.data.data);\n            console.log(\"222222222222222222222222222222\", result);\n            setNumbersOfTodos(result.data);\n            console.log(filtered);\n        } catch (err) {\n            alert(err);\n        }\n    };\n    console.log(\"132141254135133513412312312312\", filtered);\n    const handleCreateTodos = async (e, name) => {\n        try {\n            e.preventDefault();\n            await axios.post(API_GET_TODOS, {\n                name: name,\n                done: \"undone\",\n            });\n            getTodos();\n            setText(\"\");\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    const changeStatus = async (todo) => {\n        try {\n            const resault = await axios.patch(API_GET_TODOS + `/${todo.uuid}`, {\n                name: todo.name,\n                done: todo.done === \"done\" ? \"undone\" : \"done\",\n            });\n            setCurrentPage(resault.data);\n            getTodos();\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    const removeItem = async (uuid) => {\n        try {\n            await axios.delete(API_GET_TODOS + `/${uuid}`);\n            await getTodos();\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n\n    const IndexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = IndexOfLastTodo - todosPerPage;\n\n    return (\n        <div className=\"container\">\n            <Title />\n            <div className=\"mainInput\">\n                <Input\n                    text={text}\n                    setText={setText}\n                    handleCreateTodos={handleCreateTodos}\n                />\n            </div>\n            <div className=\"mainInterface\">\n                <FilterStatus setFilter={setFilter} />\n                <SortDate filtered={filtered} setFiltered={setFiltered} />\n            </div>\n            <div className=\"todoList\">\n                <TodoList\n                    filtered={filtered}\n                    removeItem={removeItem}\n                    changeStatus={changeStatus}\n                    getTodos={getTodos}\n                    IndexOfLastTodo={IndexOfLastTodo}\n                    indexOfFirstTodo={indexOfFirstTodo}\n                />\n            </div>\n            <Paginate\n                todosPerPage={todosPerPage}\n                numbersOfTodos={numbersOfTodos}\n                setCurrentPage={setCurrentPage}\n                getTodos={getTodos}\n                currentPage={currentPage}\n            />\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
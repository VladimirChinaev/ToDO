{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../css/style.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateButton = props => {\n  _s();\n\n  const [currentTitle, setCurrentTitle] = useState('');\n  const [status, setStatus] = useState('');\n  console.log(props.todo);\n  useEffect(() => {\n    setCurrentTitle(props.todo.title);\n    setStatus(props.todo.status);\n  }, []);\n\n  const removeItem = id => {\n    props.setTodos(prevState => prevState.filter(props => {\n      return props.id !== id;\n    }));\n  };\n\n  const editText = e => {\n    props.editItem(currentTitle, props.todo.id, e, props.todo.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"buttonComplete\",\n          checked: status === \"Done\" ? true : false,\n          onChange: () => {\n            let newStatus;\n\n            if (props.todo.status === \"Done\") {\n              newStatus = \"Undone\";\n            } else {\n              newStatus = \"Done\";\n            }\n\n            setStatus(newStatus);\n            props.changeStatus(newStatus, props.todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentTitle,\n            onKeyDown: e => editText(e),\n            onChange: e => setCurrentTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.todo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"\\uD83D\\uDDD1\",\n          className: \"buttonDelete\",\n          onClick: () => {\n            removeItem(props.todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, props.todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StateButton, \"rV77XZz3PqkVVQoYqX4AV2XqWkw=\");\n\n_c = StateButton;\nexport default StateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx"],"names":["useState","useEffect","StateButton","props","currentTitle","setCurrentTitle","status","setStatus","console","log","todo","title","removeItem","id","setTodos","prevState","filter","editText","e","editItem","name","newStatus","changeStatus","target","value","date"],"mappings":"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","sourcesContent":["import \"../css/style.css\"\nimport { useState, useEffect } from \"react\";\n\nconst StateButton = (props) => {\n    const [currentTitle, setCurrentTitle] = useState('');\n    const [status, setStatus] = useState('')\n    console.log(props.todo);\n    useEffect(() => {\n        setCurrentTitle(props.todo.title)\n        setStatus(props.todo.status)\n    }, [])\n    const removeItem = (id) => {\n        props.setTodos((prevState) =>\n            prevState.filter((props) => {\n                return props.id !== id;\n            })\n        );\n    };\n    const editText = (e) => {\n        props.editItem(currentTitle, props.todo.id, e, props.todo.name);\n    }\n\n    return (\n        <div key={props.todo.id}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input type=\"checkbox\" className=\"buttonComplete\" checked={status === \"Done\" ? true : false} onChange={() => {\n                        let newStatus\n                        if (props.todo.status === \"Done\") {\n                            newStatus = \"Undone\";\n                        } else {\n                            newStatus = \"Done\"\n                        }\n                        setStatus(newStatus);\n                        props.changeStatus(newStatus, props.todo.id)\n                    }} />\n                    <div>\n                        <input value={currentTitle} onKeyDown={(e) => editText(e)} onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"inElement\">\n                    <div>{props.todo.date}</div>\n                    <input type=\"button\" value=\"ðŸ—‘\" className=\"buttonDelete\" onClick={() => {\n                        removeItem(props.todo.id);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default StateButton;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../css/style.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateButton = _ref => {\n  _s();\n\n  let {\n    todo,\n    filtered,\n    removeItem,\n    changeStatus\n  } = _ref;\n  const [currentTitle, setCurrentTitle] = useState(todo.name);\n  const [showInput, setShowInput] = useState(false);\n\n  const editItem = (e, currentTitle, uuid) => {\n    const item = filtered.find(el => el.uuid === uuid);\n    const itemIndex = filtered.findIndex(el => el.uuid === uuid);\n\n    if (e.keyCode === 13) {\n      item.name = currentTitle;\n      const arr = filtered;\n      arr[itemIndex] = item;\n      setShowInput(false);\n    }\n\n    if (e.keyCode === 27) {\n      e.target.blur();\n      setShowInput(false);\n      setCurrentTitle(todo.name);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"buttonComplete\",\n          defaultChecked: todo.done === true ? true : false,\n          onClick: () => {\n            changeStatus(todo);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), !showInput ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onDoubleClick: () => setShowInput(true),\n          children: currentTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          value: currentTitle,\n          onKeyDown: e => editItem(e, currentTitle, todo.uuid),\n          className: \"sideInput\",\n          onChange: e => setCurrentTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: new Date(Date.parse(todo.updatedAtt)).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"\\uD83D\\uDDD1\",\n          className: \"buttonDelete\",\n          onClick: () => {\n            alert(todo.uuid);\n            removeItem(todo.uuid);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, todo.uuid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StateButton, \"ZWGO7y3e8c7cElkSALg2nOzsNJU=\");\n\n_c = StateButton;\nexport default StateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx"],"names":["useState","StateButton","todo","filtered","removeItem","changeStatus","currentTitle","setCurrentTitle","name","showInput","setShowInput","editItem","e","uuid","item","find","el","itemIndex","findIndex","keyCode","arr","target","blur","done","value","Date","parse","updatedAtt","toLocaleString","alert"],"mappings":"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","sourcesContent":["import \"../css/style.css\";\nimport { useState } from \"react\";\n\nconst StateButton = ({ todo, filtered, removeItem, changeStatus }) => {\n    const [currentTitle, setCurrentTitle] = useState(todo.name);\n    const [showInput, setShowInput] = useState(false);\n\n    const editItem = (e, currentTitle, uuid) => {\n        const item = filtered.find((el) => el.uuid === uuid);\n        const itemIndex = filtered.findIndex((el) => el.uuid === uuid);\n        if (e.keyCode === 13) {\n            item.name = currentTitle;\n            const arr = filtered;\n            arr[itemIndex] = item;\n            setShowInput(false);\n        }\n        if (e.keyCode === 27) {\n            e.target.blur();\n            setShowInput(false);\n            setCurrentTitle(todo.name);\n        }\n    };\n\n    return (\n        <div key={todo.uuid}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"buttonComplete\"\n                        defaultChecked={todo.done === true ? true : false}\n                        onClick={() => {\n                            changeStatus(todo);\n                        }}\n                    />\n                    {!showInput ? (\n                        <span onDoubleClick={() => setShowInput(true)}>\n                            {currentTitle}\n                        </span>\n                    ) : (\n                        <input\n                            value={currentTitle}\n                            onKeyDown={(e) =>\n                                editItem(e, currentTitle, todo.uuid)\n                            }\n                            className=\"sideInput\"\n                            onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    )}\n                </div>\n                <div className=\"inElement\">\n                    <div>\n                        {new Date(Date.parse(todo.updatedAtt)).toLocaleString()}\n                    </div>\n                    <input\n                        type=\"button\"\n                        value=\"ðŸ—‘\"\n                        className=\"buttonDelete\"\n                        onClick={() => {\n                            alert(todo.uuid)\n                            removeItem(todo.uuid);\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default StateButton;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_GET_TODOS = \"http://localhost:3501/api/todos\"; // import Pagination from '@mui/material/Pagination';\n// import Stack from '@mui/material/Stack';\n\nconst Paginate = (filter, totalTodos, todosPerPage, paginate) => {\n  let result;\n\n  const pag = async () => {\n    const href = API_GET_TODOS + `?${filter !== '' && `filterBy=${filter}&`}order=asc`;\n    return result = await axios.get(href);\n  }; // const pageNumbers = [];\n  // for (let i = 1; i <= (Math.ceil(totalTodos / todosPerPage)); i++) {\n  //     pageNumbers.push(i);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainSelect\",\n      children: totalTodos > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inSelect\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            paginate(1);\n          },\n          className: \"selectArrow\",\n          children: \"\\u276E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), result.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n          select: true,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            href: \"!#\",\n            className: \"select\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            paginate(Math.ceil(totalTodos / todosPerPage));\n          },\n          className: \"selectArrow\",\n          children: \"\\u276F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Paginate;\nexport default Paginate;\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */\n// <Stack spacing={10}>\n//     <div className=\"inSelect\">\n//         <Pagination count={pageNumbers[i]} showFirstButton showLastButton color=\"primary\" defaultPage={1} />\n//     </div>\n// </Stack>\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js"],"names":["React","axios","API_GET_TODOS","Paginate","filter","totalTodos","todosPerPage","paginate","result","pag","href","get","map","number","Math","ceil"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAa,GAAG,iCAAtB,C,CACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,KAAgD;AAC7D,MAAIC,MAAJ;;AAEA,QAAMC,GAAG,GAAG,YAAY;AACpB,UAAMC,IAAI,GAAGR,aAAa,GAAI,IAAGE,MAAM,KAAK,EAAX,IAAkB,YAAWA,MAAO,GAAG,WAAxE;AACA,WACII,MAAM,GAAG,MAAMP,KAAK,CAACU,GAAN,CAAUD,IAAV,CADnB;AAGH,GALD,CAH6D,CAW7D;AACA;AACA;AACA;;;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKL,UAAU,GAAG,CAAb,gBACG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEE,YAAAA,QAAQ,CAAC,CAAD,CAAR;AAAa,WAAtC;AAAwC,UAAA,SAAS,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKC,MAAM,CAACI,GAAP,CAAYC,MAAM,iBACf;AAAkB,UAAA,MAAM,MAAxB;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAMN,QAAQ,CAACM,MAAD,CAA/B;AAAyC,YAAA,IAAI,EAAC,IAA9C;AAAmD,YAAA,SAAS,EAAC,QAA7D;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL,eASI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEN,YAAAA,QAAQ,CAACO,IAAI,CAACC,IAAL,CAAUV,UAAU,GAAGC,YAAvB,CAAD,CAAR;AAAgD,WAAzE;AAA2E,UAAA,SAAS,EAAC,aAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAYK;AAbV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAlCD;;KAAMH,Q;AAoCN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGoB;AACZ;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nconst API_GET_TODOS = \"http://localhost:3501/api/todos\";\n// import Pagination from '@mui/material/Pagination';\n// import Stack from '@mui/material/Stack';\n\nconst Paginate = (filter, totalTodos, todosPerPage, paginate) => {\n    let result;\n\n    const pag = async () => {\n        const href = API_GET_TODOS + `?${filter !== '' && `filterBy=${filter}&`}order=asc`;\n        return (\n            result = await axios.get(href))\n\n    }\n\n\n    // const pageNumbers = [];\n    // for (let i = 1; i <= (Math.ceil(totalTodos / todosPerPage)); i++) {\n    //     pageNumbers.push(i);\n    // }\n    return (\n        <div>\n            <div className=\"mainSelect\">\n                {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {result.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"}\n            </div>\n        </div>\n    )\n}\n\nexport default Paginate;\n\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */\n\n\n                    // <Stack spacing={10}>\n        //     <div className=\"inSelect\">\n        //         <Pagination count={pageNumbers[i]} showFirstButton showLastButton color=\"primary\" defaultPage={1} />\n        //     </div>\n        // </Stack>"]},"metadata":{},"sourceType":"module"}
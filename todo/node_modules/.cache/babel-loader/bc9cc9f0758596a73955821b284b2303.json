{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/StateButtons.jsx\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompleteButton = props => {\n  const removeItem = id => {\n    setTodos(function () {\n      for (var _len = arguments.length, prevState = new Array(_len), _key = 0; _key < _len; _key++) {\n        prevState[_key] = arguments[_key];\n      }\n\n      return prevState.filter(index => {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"buttonComplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"23/11/2021\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"\\uD83D\\uDDD1\",\n        className: \"buttonDelete\",\n        onClick: () => {\n          props.removeItem(props.index);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CompleteButton;\nexport default CompleteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompleteButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/StateButtons.jsx"],"names":["CompleteButton","props","removeItem","id","setTodos","prevState","filter","index","title"],"mappings":";AAAA,OAAO,aAAP;;;AAIA,MAAMA,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvBC,IAAAA,QAAQ,CAAC;AAAA,wCAAIC,SAAJ;AAAIA,QAAAA,SAAJ;AAAA;;AAAA,aACLA,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAW;AACxB,eAAOA,KAAK,KAAKJ,EAAjB;AACH,OAFD,CADK;AAAA,KAAD,CAAR;AAKH,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAMF,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,cAA3B;AAAgC,QAAA,SAAS,EAAC,cAA1C;AAAyD,QAAA,OAAO,EAAE,MAAM;AACpEP,UAAAA,KAAK,CAACC,UAAN,CAAiBD,KAAK,CAACM,KAAvB;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtBD;;KAAMP,c;AAyBN,eAAeA,cAAf","sourcesContent":["import \"./style.css\"\n\n\n\nconst CompleteButton = (props) => {\n    const removeItem = (id) => {\n        setTodos((...prevState) =>\n            prevState.filter((index) => {\n                return index !== id;\n            })\n        );\n    };\n    return (\n        <div className=\"todoElement\">\n            <div className=\"inElement\">\n                <input type=\"checkbox\" className=\"buttonComplete\" />\n                <div>{props.title}</div>\n            </div>\n            <div className=\"inElement\">\n                <div>23/11/2021</div>\n                <input type=\"button\" value=\"ðŸ—‘\" className=\"buttonDelete\" onClick={() => {\n                    props.removeItem(props.index);\n                }} />\n            </div>\n        </div>\n    )\n}\n\n\nexport default CompleteButton;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../css/style.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateButton = _ref => {\n  _s();\n\n  let {\n    todo,\n    setTodos,\n    filtered,\n    changeStatus\n  } = _ref;\n  const [currentTitle, setCurrentTitle] = useState(todo.title);\n  const [status, setStatus] = useState('');\n\n  const editItem = (e, currentTitle, id) => {\n    const item = filtered.find(el => el.id === id);\n    const itemIndex = filtered.findIndex(el => el.id === id);\n\n    if (e.keyCode === 13) {\n      item.title = currentTitle;\n      const arr = filtered;\n      arr[itemIndex] = item;\n      setTodos(arr);\n    }\n\n    if (e.keyCode === 27) {\n      e.target.blur();\n      setCurrentTitle(todo.title);\n    }\n  };\n\n  const removeItem = id => {\n    setTodos(prevState => prevState.filter(props => {\n      return props.id !== id;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"buttonComplete\",\n          checked: status === \"Done\" ? true : false,\n          onChange: () => {\n            let newStatus;\n\n            if (todo.status === \"Done\") {\n              newStatus = \"Undone\";\n            } else {\n              newStatus = \"Done\";\n            }\n\n            setStatus(newStatus);\n            changeStatus(newStatus, todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentTitle,\n            onKeyDown: e => editItem(e, currentTitle, todo.id),\n            className: \"sideInput\",\n            onChange: e => setCurrentTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"\\uD83D\\uDDD1\",\n          className: \"buttonDelete\",\n          onClick: () => {\n            removeItem(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StateButton, \"qWhaT7yiz0lQ0crywF7hP4lMiGo=\");\n\n_c = StateButton;\nexport default StateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx"],"names":["useState","StateButton","todo","setTodos","filtered","changeStatus","currentTitle","setCurrentTitle","title","status","setStatus","editItem","e","id","item","find","el","itemIndex","findIndex","keyCode","arr","target","blur","removeItem","prevState","filter","props","newStatus","value","date"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,WAAW,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAA+C;AAChE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAACE,IAAI,CAACM,KAAN,CAAhD;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,QAAQ,GAAG,CAACC,CAAD,EAAIN,YAAJ,EAAkBO,EAAlB,KAAyB;AACtC,UAAMC,IAAI,GAAGV,QAAQ,CAACW,IAAT,CAAcC,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUA,EAA9B,CAAb;AAEA,UAAMI,SAAS,GAAGb,QAAQ,CAACc,SAAT,CAAmBF,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUA,EAAnC,CAAlB;;AACA,QAAID,CAAC,CAACO,OAAF,KAAc,EAAlB,EAAsB;AAClBL,MAAAA,IAAI,CAACN,KAAL,GAAaF,YAAb;AACA,YAAMc,GAAG,GAAGhB,QAAZ;AACAgB,MAAAA,GAAG,CAACH,SAAD,CAAH,GAAiBH,IAAjB;AACAX,MAAAA,QAAQ,CAACiB,GAAD,CAAR;AACH;;AACD,QAAIR,CAAC,CAACO,OAAF,KAAc,EAAlB,EAAsB;AAClBP,MAAAA,CAAC,CAACS,MAAF,CAASC,IAAT;AACAf,MAAAA,eAAe,CAACL,IAAI,CAACM,KAAN,CAAf;AACH;AAEJ,GAfD;;AAiBA,QAAMe,UAAU,GAAIV,EAAD,IAAQ;AACvBV,IAAAA,QAAQ,CAAEqB,SAAD,IACLA,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAW;AACxB,aAAOA,KAAK,CAACb,EAAN,KAAaA,EAApB;AACH,KAFD,CADI,CAAR;AAKH,GAND;;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,gBAAjC;AAAkD,UAAA,OAAO,EAAEJ,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2B,KAAtF;AAA6F,UAAA,QAAQ,EAAE,MAAM;AACzG,gBAAIkB,SAAJ;;AACA,gBAAIzB,IAAI,CAACO,MAAL,KAAgB,MAApB,EAA4B;AACxBkB,cAAAA,SAAS,GAAG,QAAZ;AACH,aAFD,MAEO;AACHA,cAAAA,SAAS,GAAG,MAAZ;AACH;;AACDjB,YAAAA,SAAS,CAACiB,SAAD,CAAT;AACAtB,YAAAA,YAAY,CAACsB,SAAD,EAAYzB,IAAI,CAACW,EAAjB,CAAZ;AACH;AATD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,iCACI;AAAO,YAAA,KAAK,EAAEP,YAAd;AAA4B,YAAA,SAAS,EAAGM,CAAD,IAAOD,QAAQ,CAACC,CAAD,EAAIN,YAAJ,EAAkBJ,IAAI,CAACW,EAAvB,CAAtD;AAAkF,YAAA,SAAS,EAAC,WAA5F;AAAwG,YAAA,QAAQ,EAAGD,CAAD,IAAOL,eAAe,CAACK,CAAC,CAACS,MAAF,CAASO,KAAV;AAAxI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAiBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAM1B,IAAI,CAAC2B;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,cAA3B;AAAgC,UAAA,SAAS,EAAC,cAA1C;AAAyD,UAAA,OAAO,EAAE,MAAM;AACpEN,YAAAA,UAAU,CAACrB,IAAI,CAACW,EAAN,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUX,IAAI,CAACW,EAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAzDD;;GAAMZ,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import \"../css/style.css\"\nimport { useState } from \"react\";\n\n\nconst StateButton = ({ todo, setTodos, filtered, changeStatus }) => {\n    const [currentTitle, setCurrentTitle] = useState(todo.title);\n    const [status, setStatus] = useState('')\n\n    const editItem = (e, currentTitle, id) => {\n        const item = filtered.find(el => el.id === id);\n\n        const itemIndex = filtered.findIndex(el => el.id === id);\n        if (e.keyCode === 13) {\n            item.title = currentTitle\n            const arr = filtered\n            arr[itemIndex] = item\n            setTodos(arr);\n        }\n        if (e.keyCode === 27) {\n            e.target.blur();\n            setCurrentTitle(todo.title)\n        }\n\n    }\n\n    const removeItem = (id) => {\n        setTodos((prevState) =>\n            prevState.filter((props) => {\n                return props.id !== id;\n            })\n        );\n    };\n\n    return (\n        <div key={todo.id}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input type=\"checkbox\" className=\"buttonComplete\" checked={status === \"Done\" ? true : false} onChange={() => {\n                        let newStatus\n                        if (todo.status === \"Done\") {\n                            newStatus = \"Undone\";\n                        } else {\n                            newStatus = \"Done\"\n                        }\n                        setStatus(newStatus);\n                        changeStatus(newStatus, todo.id)\n                    }} />\n                    <div>\n                        <input value={currentTitle} onKeyDown={(e) => editItem(e, currentTitle, todo.id)} className=\"sideInput\" onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"inElement\">\n                    <div>{todo.date}</div>\n                    <input type=\"button\" value=\"ðŸ—‘\" className=\"buttonDelete\" onClick={() => {\n                        removeItem(todo.id);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default StateButton;"]},"metadata":{},"sourceType":"module"}
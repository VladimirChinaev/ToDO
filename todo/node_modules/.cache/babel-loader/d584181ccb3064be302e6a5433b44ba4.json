{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async function (url) {\n    let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n    let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers[\"Content-Type\"] = \"application/json\";\n      }\n\n      const response = await axios(url, {\n        method,\n        body,\n        headers\n      });\n\n      if (!response) {\n        throw new Error(response || \"Something was going wrong...\");\n      }\n\n      setLoading(false);\n      return response;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"MstwQpYZpw83DP6eQvw4fjC0Jxg=\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/hooks/http.hook.js"],"names":["axios","useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","Error","e","message","clearError"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,OAAO,GAAGN,WAAW,CAAC,gBAAOO,GAAP,EAA0D;AAAA,QAA9CC,MAA8C,uEAArC,KAAqC;AAAA,QAA9BC,IAA8B,uEAAvB,IAAuB;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;AAClFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,UAAIM,IAAJ,EAAU;AACNA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACH;;AACD,YAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACS,GAAD,EAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA;AAAhB,OAAN,CAA5B;;AACA,UAAI,CAACG,QAAL,EAAe;AACX,cAAM,IAAIC,KAAJ,CAAUD,QAAQ,IAAI,8BAAtB,CAAN;AACH;;AACDV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOU,QAAP;AACH,KAXD,CAWE,OAAOE,CAAP,EAAU;AACRZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACU,CAAC,CAACC,OAAH,CAAR;AACA,YAAMD,CAAN;AACH;AACJ,GAlB0B,EAkBxB,EAlBwB,CAA3B;;AAmBA,QAAME,UAAU,GAAG,MAAMZ,QAAQ,CAAC,IAAD,CAAjC;;AACA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2Ba,IAAAA;AAA3B,GAAP;AACH,CAxBM;;GAAMhB,O","sourcesContent":["import axios from \"axios\";\nimport { useState, useCallback } from \"react\"\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n        setLoading(true);\n        try {\n            if (body) {\n                body = JSON.stringify(body);\n                headers[\"Content-Type\"] = \"application/json\"\n            }\n            const response = await axios(url, { method, body, headers })\n            if (!response) {\n                throw new Error(response || \"Something was going wrong...\")\n            }\n            setLoading(false);\n            return response;\n        } catch (e) {\n            setLoading(false);\n            setError(e.message);\n            throw e;\n        }\n    }, [])\n    const clearError = () => setError(null);\n    return { loading, request, error, clearError }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/StateButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateButton = props => {\n  _s();\n\n  const [status, setStatus] = useState(props.todo.status);\n\n  const removeItem = id => {\n    props.setTodos(prevState => prevState.filter(props => {\n      return props.id !== id;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"buttonComplete\",\n          checked: status === \"Done\" ? true : false,\n          onChange: () => {\n            let newStatus;\n\n            if (props.todo.status === \"Done\") {\n              newStatus = \"Undone\";\n            } else {\n              newStatus = \"Done\";\n            }\n\n            setStatus(newStatus);\n            props.changeStatus(newStatus, props.todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.todo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"\\uD83D\\uDDD1\",\n          className: \"buttonDelete\",\n          onClick: () => {\n            removeItem(props.todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, props.todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StateButton, \"X9v/RiumUqochssX4+gMmVbTRtw=\");\n\n_c = StateButton;\nexport default StateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/StateButtons.jsx"],"names":["useState","StateButton","props","status","setStatus","todo","removeItem","id","setTodos","prevState","filter","newStatus","changeStatus","title","date"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,KAAK,CAACG,IAAN,CAAWF,MAAZ,CAApC;;AAEA,QAAMG,UAAU,GAAIC,EAAD,IAAQ;AACvBL,IAAAA,KAAK,CAACM,QAAN,CAAgBC,SAAD,IACXA,SAAS,CAACC,MAAV,CAAkBR,KAAD,IAAW;AACxB,aAAOA,KAAK,CAACK,EAAN,KAAaA,EAApB;AACH,KAFD,CADJ;AAKH,GAND;;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,gBAAjC;AAAkD,UAAA,OAAO,EAAEJ,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2B,KAAtF;AAA6F,UAAA,QAAQ,EAAE,MAAM;AACzG,gBAAIQ,SAAJ;;AACA,gBAAIT,KAAK,CAACG,IAAN,CAAWF,MAAX,KAAsB,MAA1B,EAAkC;AAC9BQ,cAAAA,SAAS,GAAG,QAAZ;AACH,aAFD,MAEO;AACHA,cAAAA,SAAS,GAAG,MAAZ;AACH;;AACDP,YAAAA,SAAS,CAACO,SAAD,CAAT;AACAT,YAAAA,KAAK,CAACU,YAAN,CAAmBD,SAAnB,EAA8BT,KAAK,CAACG,IAAN,CAAWE,EAAzC;AACH;AATD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,oBACKL,KAAK,CAACG,IAAN,CAAWQ;AADhB;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAMX,KAAK,CAACG,IAAN,CAAWS;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,cAA3B;AAAgC,UAAA,SAAS,EAAC,cAA1C;AAAyD,UAAA,OAAO,EAAE,MAAM;AACpER,YAAAA,UAAU,CAACJ,KAAK,CAACG,IAAN,CAAWE,EAAZ,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA,OAAkCL,KAAK,CAACG,IAAN,CAAWE,EAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAvCD;;GAAMN,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import \"./style.css\"\nimport { useState } from \"react\";\n\nconst StateButton = (props) => {\n\n    const [status, setStatus] = useState(props.todo.status)\n\n    const removeItem = (id) => {\n        props.setTodos((prevState) =>\n            prevState.filter((props) => {\n                return props.id !== id;\n            })\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"todoElement\" key={props.todo.id}>\n                <div className=\"inElement\">\n                    <input type=\"checkbox\" className=\"buttonComplete\" checked={status === \"Done\" ? true : false} onChange={() => {\n                        let newStatus\n                        if (props.todo.status === \"Done\") {\n                            newStatus = \"Undone\";\n                        } else {\n                            newStatus = \"Done\"\n                        }\n                        setStatus(newStatus);\n                        props.changeStatus(newStatus, props.todo.id)\n                    }} />\n                    <div>\n                        {props.todo.title}\n                    </div>\n                </div>\n                <div className=\"inElement\">\n                    <div>{props.todo.date}</div>\n                    <input type=\"button\" value=\"ðŸ—‘\" className=\"buttonDelete\" onClick={() => {\n                        removeItem(props.todo.id);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default StateButton;"]},"metadata":{},"sourceType":"module"}
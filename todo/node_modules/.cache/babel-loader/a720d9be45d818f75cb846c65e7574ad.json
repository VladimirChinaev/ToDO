{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/TodoList.js\";\nimport StateButtons from \"../TodoList/StateButtons\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst editItem = (currentTitle, id, e, filtered, setFiltered) => {\n  if (e.keyCode === 13) {\n    console.log(props);\n    let array = [filtered];\n    array = array.map((el, index) => {\n      if (array[index].id === id) {\n        array[index].title = currentTitle;\n      }\n    });\n    setFiltered(array);\n  }\n};\n\nconst TodoList = props => {\n  let taskElements = props.filtered.map(e => /*#__PURE__*/_jsxDEV(StateButtons, {\n    removeItem: props.removeItem,\n    setTodos: props.setTodos,\n    todos: props.todos,\n    setText: props.setText,\n    text: props.text,\n    changeStatus: props.changeStatus,\n    todo: e,\n    editItem: editItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 48\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoList\",\n    children: taskElements.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: task\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/TodoList.js"],"names":["StateButtons","v4","uuidv4","editItem","currentTitle","id","e","filtered","setFiltered","keyCode","console","log","props","array","map","el","index","title","TodoList","taskElements","removeItem","setTodos","todos","setText","text","changeStatus","task"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,0BAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,EAAf,EAAmBC,CAAnB,EAAsBC,QAAtB,EAAgCC,WAAhC,KAAgD;AAE7D,MAAIF,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,QAAIC,KAAK,GAAG,CAACN,QAAD,CAAZ;AACAM,IAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC7B,UAAIH,KAAK,CAACG,KAAD,CAAL,CAAaX,EAAb,KAAoBA,EAAxB,EAA4B;AACxBQ,QAAAA,KAAK,CAACG,KAAD,CAAL,CAAaC,KAAb,GAAqBb,YAArB;AACH;AACJ,KAJO,CAAR;AAKAI,IAAAA,WAAW,CAACK,KAAD,CAAX;AACH;AAEJ,CAbD;;AAeA,MAAMK,QAAQ,GAAIN,KAAD,IAAW;AACxB,MAAIO,YAAY,GAAGP,KAAK,CAACL,QAAN,CAAeO,GAAf,CAAmBR,CAAC,iBAAI,QAAC,YAAD;AAAc,IAAA,UAAU,EAAEM,KAAK,CAACQ,UAAhC;AAA4C,IAAA,QAAQ,EAAER,KAAK,CAACS,QAA5D;AAAsE,IAAA,KAAK,EAAET,KAAK,CAACU,KAAnF;AAA0F,IAAA,OAAO,EAAEV,KAAK,CAACW,OAAzG;AAAkH,IAAA,IAAI,EAAEX,KAAK,CAACY,IAA9H;AAAoI,IAAA,YAAY,EAAEZ,KAAK,CAACa,YAAxJ;AAAsK,IAAA,IAAI,EAAEnB,CAA5K;AAA+K,IAAA,QAAQ,EAAEH;AAAzL;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAnB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKgB,YAAY,CAACL,GAAb,CAAkBY,IAAD,IAAU;AACxB,0BAAQ;AAAA,kBAAqBA;AAArB,SAAUxB,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD;;KAAMgB,Q;AAWN,eAAeA,QAAf","sourcesContent":["import StateButtons from \"../TodoList/StateButtons\"\nimport { v4 as uuidv4 } from 'uuid';\n\nconst editItem = (currentTitle, id, e, filtered, setFiltered) => {\n\n    if (e.keyCode === 13) {\n        console.log(props);\n        let array = [filtered];\n        array = array.map((el, index) => {\n            if (array[index].id === id) {\n                array[index].title = currentTitle;\n            }\n        })\n        setFiltered(array);\n    }\n\n}\n\nconst TodoList = (props) => {\n    let taskElements = props.filtered.map(e => <StateButtons removeItem={props.removeItem} setTodos={props.setTodos} todos={props.todos} setText={props.setText} text={props.text} changeStatus={props.changeStatus} todo={e} editItem={editItem} />)\n    return (\n        <div className=\"todoList\">\n            {taskElements.map((task) => {\n                return (<div key={uuidv4()}>{task}</div>)\n            })}\n        </div>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}
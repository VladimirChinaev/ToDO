{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/TodoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    todo,\n    removeItem,\n    changeStatus,\n    token,\n    getTodos\n  } = _ref;\n  const API_GET_TODOS = \"http://localhost:3505/api/todos\";\n  const [currentTitle, setCurrentTitle] = useState(todo.item);\n  const [showInput, setShowInput] = useState(false);\n\n  const editItem = async (e, currentTitle, todo) => {\n    try {\n      if (e.keyCode === 13) {\n        await axios(API_GET_TODOS + `/${todo.uuid}`, {\n          method: \"PATCH\",\n          body: {\n            name: currentTitle,\n            done: todo.done === \"done\" ? \"done\" : \"undone\"\n          },\n          headers: {\n            Authorization: \"Bearer \" + token\n          }\n        });\n        e.target.blur();\n      }\n\n      if (e.keyCode === 27) {\n        e.target.blur();\n      }\n\n      getTodos();\n    } catch (err) {\n      console.log(err);\n      alert(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"buttonComplete\",\n          defaultChecked: todo.done === true ? true : false,\n          onClick: () => {\n            changeStatus(todo);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), !showInput ? /*#__PURE__*/_jsxDEV(\"span\", {\n          onDoubleClick: () => setShowInput(true),\n          children: currentTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          value: currentTitle,\n          onKeyDown: e => editItem(e, currentTitle, todo),\n          className: \"sideInput\",\n          onChange: e => setCurrentTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: new Date(Date.parse(todo.updatedAtt)).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"\\uD83D\\uDDD1\",\n          className: \"buttonDelete\",\n          onClick: () => {\n            removeItem(todo.uuid);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, todo.uuid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"pcBf8sBSwd6R8SpTSZgmJkbsz28=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/TodoItem.jsx"],"names":["useState","axios","TodoItem","todo","removeItem","changeStatus","token","getTodos","API_GET_TODOS","currentTitle","setCurrentTitle","item","showInput","setShowInput","editItem","e","keyCode","uuid","method","body","name","done","headers","Authorization","target","blur","err","console","log","alert","value","Date","parse","updatedAtt","toLocaleString"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../css/style.css\";\n\nconst TodoItem = ({ todo, removeItem, changeStatus, token, getTodos }) => {\n    const API_GET_TODOS = \"http://localhost:3505/api/todos\";\n    const [currentTitle, setCurrentTitle] = useState(todo.item);\n    const [showInput, setShowInput] = useState(false);\n\n\n    const editItem = async (e, currentTitle, todo) => {\n        try {\n            if (e.keyCode === 13) {\n                await axios(API_GET_TODOS + `/${todo.uuid}`, {\n                    method: \"PATCH\",\n                    body: {\n                        name: currentTitle,\n                        done: todo.done === \"done\" ? \"done\" : \"undone\",\n                    },\n                    headers: {\n                        Authorization: \"Bearer \" + token\n                    }\n                });\n                e.target.blur();\n            }\n            if (e.keyCode === 27) {\n                e.target.blur();\n            }\n            getTodos();\n        } catch (err) {\n            console.log(err);\n            alert(err);\n        }\n    };\n    return (\n        <div key={todo.uuid}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"buttonComplete\"\n                        defaultChecked={todo.done === true ? true : false}\n                        onClick={() => {\n                            changeStatus(todo);\n                        }}\n                    />\n                    {!showInput ? (\n                        <span onDoubleClick={() => setShowInput(true)}>\n                            {currentTitle}\n                        </span>\n                    ) : (\n                        <input\n                            value={currentTitle}\n                            onKeyDown={(e) =>\n                                editItem(e, currentTitle, todo)\n                            }\n                            className=\"sideInput\"\n                            onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    )}\n                </div>\n                <div className=\"inElement\">\n                    <div>\n                        {new Date(Date.parse(todo.updatedAtt)).toLocaleString()}\n                    </div>\n                    <input\n                        type=\"button\"\n                        value=\"ðŸ—‘\"\n                        className=\"buttonDelete\"\n                        onClick={() => {\n                            removeItem(todo.uuid);\n                        }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}
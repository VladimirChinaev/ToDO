{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/TodoList.js\";\nimport StateButtons from \"../TodoList/StateButtons\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = props => {\n  const editItem = (currentTitle, id, e) => {\n    console.log(e);\n\n    if (e.keyCode === 13) {\n      const item = props.filtered.find(el => el.id === id);\n      const oldName = item.title;\n      item.title = currentTitle;\n      const itemIndex = props.filtered.findIndex(el => el.id === id);\n      const arr = props.filtered;\n      arr[itemIndex] = item;\n      props.setTodos(arr);\n    }\n\n    if (e.keyCode === 27) {\n      e.target.blur();\n    }\n  };\n\n  let taskElements = props.filtered.map(e => /*#__PURE__*/_jsxDEV(StateButtons, {\n    removeItem: props.removeItem,\n    setTodos: props.setTodos,\n    todos: props.todos,\n    setText: props.setText,\n    text: props.text,\n    changeStatus: props.changeStatus,\n    todo: e,\n    editItem: editItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 48\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoList\",\n    children: taskElements.map(task => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: task\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/TodoList.js"],"names":["StateButtons","v4","uuidv4","TodoList","props","editItem","currentTitle","id","e","console","log","keyCode","item","filtered","find","el","oldName","title","itemIndex","findIndex","arr","setTodos","target","blur","taskElements","map","removeItem","todos","setText","text","changeStatus","task"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,0BAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,QAAQ,GAAG,CAACC,YAAD,EAAeC,EAAf,EAAmBC,CAAnB,KAAyB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,QAAIA,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AAClB,YAAMC,IAAI,GAAGR,KAAK,CAACS,QAAN,CAAeC,IAAf,CAAoBC,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUA,EAApC,CAAb;AACA,YAAMS,OAAO,GAAGJ,IAAI,CAACK,KAArB;AACAL,MAAAA,IAAI,CAACK,KAAL,GAAaX,YAAb;AACA,YAAMY,SAAS,GAAGd,KAAK,CAACS,QAAN,CAAeM,SAAf,CAAyBJ,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUA,EAAzC,CAAlB;AACA,YAAMa,GAAG,GAAGhB,KAAK,CAACS,QAAlB;AACAO,MAAAA,GAAG,CAACF,SAAD,CAAH,GAAiBN,IAAjB;AACAR,MAAAA,KAAK,CAACiB,QAAN,CAAeD,GAAf;AACH;;AACD,QAAIZ,CAAC,CAACG,OAAF,KAAc,EAAlB,EAAsB;AAClBH,MAAAA,CAAC,CAACc,MAAF,CAASC,IAAT;AAEH;AAEJ,GAhBD;;AAiBA,MAAIC,YAAY,GAAGpB,KAAK,CAACS,QAAN,CAAeY,GAAf,CAAmBjB,CAAC,iBAAI,QAAC,YAAD;AAAc,IAAA,UAAU,EAAEJ,KAAK,CAACsB,UAAhC;AAA4C,IAAA,QAAQ,EAAEtB,KAAK,CAACiB,QAA5D;AAAsE,IAAA,KAAK,EAAEjB,KAAK,CAACuB,KAAnF;AAA0F,IAAA,OAAO,EAAEvB,KAAK,CAACwB,OAAzG;AAAkH,IAAA,IAAI,EAAExB,KAAK,CAACyB,IAA9H;AAAoI,IAAA,YAAY,EAAEzB,KAAK,CAAC0B,YAAxJ;AAAsK,IAAA,IAAI,EAAEtB,CAA5K;AAA+K,IAAA,QAAQ,EAAEH;AAAzL;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAnB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,cACKmB,YAAY,CAACC,GAAb,CAAkBM,IAAD,IAAU;AACxB,0BAAQ;AAAA,kBAAqBA;AAArB,SAAU7B,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;KAAMC,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import StateButtons from \"../TodoList/StateButtons\"\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nconst TodoList = (props) => {\n    const editItem = (currentTitle, id, e) => {\n        console.log(e);\n        if (e.keyCode === 13) {\n            const item = props.filtered.find(el => el.id === id);\n            const oldName = item.title;\n            item.title = currentTitle\n            const itemIndex = props.filtered.findIndex(el => el.id === id);\n            const arr = props.filtered\n            arr[itemIndex] = item\n            props.setTodos(arr);\n        }\n        if (e.keyCode === 27) {\n            e.target.blur();\n\n        }\n\n    }\n    let taskElements = props.filtered.map(e => <StateButtons removeItem={props.removeItem} setTodos={props.setTodos} todos={props.todos} setText={props.setText} text={props.text} changeStatus={props.changeStatus} todo={e} editItem={editItem} />)\n    return (\n        <div className=\"todoList\">\n            {taskElements.map((task) => {\n                return (<div key={uuidv4()}>{task}</div>)\n            })}\n        </div>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}
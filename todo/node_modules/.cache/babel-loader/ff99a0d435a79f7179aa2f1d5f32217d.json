{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js\";\nimport React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginate = (filter, totalTodos, todosPerPage) => {\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      count: 10,\n      showFirstButton: true,\n      showLastButton: true,\n      className: \"select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: 10,\n      hidePrevButton: true,\n      hideNextButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Paginate;\nexport default Paginate;\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js"],"names":["React","Pagination","Stack","Paginate","filter","totalTodos","todosPerPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,UAAT,EAAqBC,YAArB,KAAsC;AACnD,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,EAAE,CAAhB;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE,EAAnB;AAAuB,MAAA,eAAe,MAAtC;AAAuC,MAAA,cAAc,MAArD;AAAsD,MAAA,SAAS,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE,EAAnB;AAAuB,MAAA,cAAc,MAArC;AAAsC,MAAA,cAAc;AAApD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMH,Q;AASN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\n\nconst Paginate = (filter, totalTodos, todosPerPage) => {\n    return (\n        <Stack spacing={2}>\n            <Pagination count={10} showFirstButton showLastButton className=\"select\" />\n            <Pagination count={10} hidePrevButton hideNextButton />\n        </Stack>\n    )\n}\n\nexport default Paginate;\n\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */"]},"metadata":{},"sourceType":"module"}
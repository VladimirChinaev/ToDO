{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TodoList from './TodoList';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  const removeItem = id => {\n    setTodos(prevState => prevState.filter(el => el.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      setTodos: setTodos,\n      text: text,\n      setText: setText,\n      removeItem: removeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uuiHtX0MoUzBGU4nc8rSqL/XHco=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/App.js"],"names":["TodoList","useState","App","todos","setTodos","text","setText","removeItem","id","prevState","filter","el"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMM,UAAU,GAAGC,EAAE,IAAI;AACvBJ,IAAAA,QAAQ,CAACK,SAAS,IAAIA,SAAS,CAACC,MAAV,CAAiBC,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUA,EAAjC,CAAd,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAjB;AAAwB,MAAA,QAAQ,EAAEC,QAAlC;AAA4C,MAAA,IAAI,EAAEC,IAAlD;AAAwD,MAAA,OAAO,EAAEC,OAAjE;AAA0E,MAAA,UAAU,EAAEC;AAAtF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;GAAML,G;;KAAAA,G;AAaN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport TodoList from './TodoList';\nimport { useState } from 'react';\n\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n  const removeItem = id => {\n    setTodos(prevState => prevState.filter(el => el.id !== id))\n  }\n  return (\n    <div>\n      <TodoList todos={todos} setTodos={setTodos} text={text} setText={setText} removeItem={removeItem} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
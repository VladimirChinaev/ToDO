{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nconst storageName = \"userData\";\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    console.log(JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []); // const logout = useCallback(() => {\n  //     setToken(null)\n  //     setUserId(null)\n  //     localStorage.removeItem(storageName)\n  // }, [])\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n  }, [login]);\n  return {\n    login,\n    token,\n    userId\n  };\n};\n\n_s(useAuth, \"ubS14fQD5gX/E+AGe6HZMMdl5AQ=\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","storageName","useAuth","token","setToken","userId","setUserId","login","jwtToken","id","console","log","JSON","stringify","localStorage","setItem","data","parse","getItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,MAAMC,WAAW,GAAG,UAApB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMS,KAAK,GAAGR,WAAW,CAAC,CAACS,QAAD,EAAWC,EAAX,KAAkB;AACxCL,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACAF,IAAAA,SAAS,CAACG,EAAD,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe;AACvBR,MAAAA,MAAM,EAAEI,EADe;AACXN,MAAAA,KAAK,EAAEK;AADI,KAAf,CAAZ;AAGAM,IAAAA,YAAY,CAACC,OAAb,CAAqBd,WAArB,EAAkCW,IAAI,CAACC,SAAL,CAAe;AAC7CR,MAAAA,MAAM,EAAEI,EADqC;AACjCN,MAAAA,KAAK,EAAEK;AAD0B,KAAf,CAAlC;AAGH,GATwB,EAStB,EATsB,CAAzB,CAJyB,CAczB;AACA;AACA;AACA;AACA;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqBjB,WAArB,CAAX,CAAb;;AACA,QAAIe,IAAI,IAAIA,IAAI,CAACb,KAAjB,EAAwB;AACpBI,MAAAA,KAAK,CAACS,IAAI,CAACb,KAAN,EAAaa,IAAI,CAACX,MAAlB,CAAL;AACH;AACJ,GALQ,EAKN,CAACE,KAAD,CALM,CAAT;AAOA,SAAO;AAAEA,IAAAA,KAAF;AAASJ,IAAAA,KAAT;AAAgBE,IAAAA;AAAhB,GAAP;AACH,CA5BM;;GAAMH,O","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nconst storageName = \"userData\";\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [userId, setUserId] = useState(null);\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n        console.log(JSON.stringify({\n            userId: id, token: jwtToken\n        }));\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, [])\n    // const logout = useCallback(() => {\n    //     setToken(null)\n    //     setUserId(null)\n    //     localStorage.removeItem(storageName)\n    // }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n        if (data && data.token) {\n            login(data.token, data.userId)\n        }\n    }, [login])\n\n    return { login, token, userId }\n}"]},"metadata":{},"sourceType":"module"}
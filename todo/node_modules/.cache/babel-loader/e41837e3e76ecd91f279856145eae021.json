{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_GET_TODOS = \"http://localhost:3501/api/todos\";\n\nconst Paginate = (filter, totalTodos, todosPerPage, paginate, getTodos) => {\n  _s();\n\n  const [result, setResault] = useState([]);\n\n  getTodos = async () => {\n    const href = API_GET_TODOS + `?${filter !== '' && `filterBy=${filter}&`}order=desc`;\n    const res = await axios.get(href);\n    setResault(res.data.page);\n  };\n\n  console.log(result);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainSelect\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inSelect\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            paginate(1);\n          },\n          className: \"selectArrow\",\n          children: \"\\u276E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), result.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n          select: true,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(number),\n            href: \"!#\",\n            className: \"select\",\n            children: number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)\n        }, number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            paginate(Math.ceil(totalTodos / todosPerPage));\n          },\n          className: \"selectArrow\",\n          children: \"\\u276F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginate, \"Gc9oJyu9svB/DKqze4TZexDMnTg=\");\n\n_c = Paginate;\nexport default Paginate; // import Pagination from '@mui/material/Pagination';\n// import Stack from '@mui/material/Stack';\n// const pageNumbers = [];\n// for (let i = 1; i <= (Math.ceil(totalTodos / todosPerPage)); i++) {\n//     pageNumbers.push(i);\n// }\n\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */\n// <Stack spacing={10}>\n//     <div className=\"inSelect\">\n//         <Pagination count={pageNumbers[i]} showFirstButton showLastButton color=\"primary\" defaultPage={1} />\n//     </div>\n// </Stack>\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/pagination/Pagination.js"],"names":["React","useState","axios","API_GET_TODOS","Paginate","filter","totalTodos","todosPerPage","paginate","getTodos","result","setResault","href","res","get","data","page","console","log","map","number","Math","ceil"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,aAAa,GAAG,iCAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,UAAT,EAAqBC,YAArB,EAAmCC,QAAnC,EAA6CC,QAA7C,KAA0D;AAAA;;AACvE,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,EAAD,CAArC;;AACAQ,EAAAA,QAAQ,GAAG,YAAY;AACnB,UAAMG,IAAI,GAAGT,aAAa,GAAI,IAAGE,MAAM,KAAK,EAAX,IAAkB,YAAWA,MAAO,GAAG,YAAxE;AACA,UAAMQ,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUF,IAAV,CAAlB;AACAD,IAAAA,UAAU,CAACE,GAAG,CAACE,IAAJ,CAASC,IAAV,CAAV;AACH,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BAEQ;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEF,YAAAA,QAAQ,CAAC,CAAD,CAAR;AAAa,WAAtC;AAAwC,UAAA,SAAS,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKE,MAAM,CAACS,GAAP,CAAYC,MAAM,iBACf;AAAkB,UAAA,MAAM,MAAxB;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAE,MAAMZ,QAAQ,CAACY,MAAD,CAA/B;AAAyC,YAAA,IAAI,EAAC,IAA9C;AAAmD,YAAA,SAAS,EAAC,QAA7D;AAAA,sBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL,eASI;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEZ,YAAAA,QAAQ,CAACa,IAAI,CAACC,IAAL,CAAUhB,UAAU,GAAGC,YAAvB,CAAD,CAAR;AAAgD,WAAzE;AAA2E,UAAA,SAAS,EAAC,aAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA5BD;;GAAMH,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf,C,CAIA;AACA;AACE;AACE;AACA;AACA;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGoB;AACZ;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport axios from \"axios\";\nconst API_GET_TODOS = \"http://localhost:3501/api/todos\";\n\nconst Paginate = (filter, totalTodos, todosPerPage, paginate, getTodos) => {\n    const [result, setResault] = useState([]);\n    getTodos = async () => {\n        const href = API_GET_TODOS + `?${filter !== '' && `filterBy=${filter}&`}order=desc`;\n        const res = await axios.get(href);\n        setResault(res.data.page);\n    }\n\n    console.log(result);\n    return (\n        <div>\n            <div className=\"mainSelect\">\n                {\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {result.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Paginate;\n\n\n\n// import Pagination from '@mui/material/Pagination';\n// import Stack from '@mui/material/Stack';\n  // const pageNumbers = [];\n    // for (let i = 1; i <= (Math.ceil(totalTodos / todosPerPage)); i++) {\n    //     pageNumbers.push(i);\n    // }\n/* {totalTodos > 0 ?\n                    <div className=\"inSelect\">\n                        <button onClick={() => { paginate(1) }} className=\"selectArrow\">❮</button>\n                        {pageNumbers.map((number => (\n                            <div key={number} select>\n                                <button onClick={() => paginate(number)} href=\"!#\" className=\"select\">\n                                    {number}\n                                </button>\n                            </div>\n                        )))}\n                        <button onClick={() => { paginate(Math.ceil(totalTodos / todosPerPage)) }} className=\"selectArrow\">❯</button>\n                    </div>\n                    : \"\"} */\n\n\n                    // <Stack spacing={10}>\n        //     <div className=\"inSelect\">\n        //         <Pagination count={pageNumbers[i]} showFirstButton showLastButton color=\"primary\" defaultPage={1} />\n        //     </div>\n        // </Stack>"]},"metadata":{},"sourceType":"module"}
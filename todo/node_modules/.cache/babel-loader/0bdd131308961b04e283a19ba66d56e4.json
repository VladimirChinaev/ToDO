{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst storageName = \"userData\";\nexport const useAuth = () => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken);\n    setUserId(id);\n    localStorage.setItem(storageName, JSON.stringify({\n      userId: id,\n      token: jwtToken\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(storageName);\n  }, []);\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName));\n\n    if (data && data.token) {\n      login(data.token, data.userId);\n    }\n  }, [login]);\n  return {\n    login,\n    logout,\n    token,\n    userId\n  };\n};\n\n_s(useAuth, \"zP3kxYlM4OWVjLqoGJYgTIlHttM=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/hooks/auth.hook.js"],"names":["useState","useCallback","useEffect","useNavigate","storageName","useAuth","token","setToken","userId","setUserId","navigate","login","jwtToken","id","localStorage","setItem","JSON","stringify","logout","removeItem","data","parse","getItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,MAAMC,WAAW,GAAG,UAApB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMU,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,KAAK,GAAGV,WAAW,CAAC,CAACW,QAAD,EAAWC,EAAX,KAAkB;AACxCN,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACAH,IAAAA,SAAS,CAACI,EAAD,CAAT;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqBX,WAArB,EAAkCY,IAAI,CAACC,SAAL,CAAe;AAC7CT,MAAAA,MAAM,EAAEK,EADqC;AACjCP,MAAAA,KAAK,EAAEM;AAD0B,KAAf,CAAlC;AAGH,GANwB,EAMtB,EANsB,CAAzB;AAQA,QAAMM,MAAM,GAAGjB,WAAW,CAAC,MAAM;AAC7BM,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,IAAAA,YAAY,CAACK,UAAb,CAAwBf,WAAxB;AACH,GAJyB,EAIvB,EAJuB,CAA1B;AAMAF,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMkB,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWP,YAAY,CAACQ,OAAb,CAAqBlB,WAArB,CAAX,CAAb;;AACA,QAAIgB,IAAI,IAAIA,IAAI,CAACd,KAAjB,EAAwB;AACpBK,MAAAA,KAAK,CAACS,IAAI,CAACd,KAAN,EAAac,IAAI,CAACZ,MAAlB,CAAL;AACH;AACJ,GALQ,EAKN,CAACG,KAAD,CALM,CAAT;AAOA,SAAO;AAAEA,IAAAA,KAAF;AAASO,IAAAA,MAAT;AAAiBZ,IAAAA,KAAjB;AAAwBE,IAAAA;AAAxB,GAAP;AACH,CA3BM;;GAAMH,O;UAGQF,W","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst storageName = \"userData\";\nexport const useAuth = () => {\n    const [token, setToken] = useState(null);\n    const [userId, setUserId] = useState(null);\n    const navigate = useNavigate();\n\n    const login = useCallback((jwtToken, id) => {\n        setToken(jwtToken)\n        setUserId(id)\n        localStorage.setItem(storageName, JSON.stringify({\n            userId: id, token: jwtToken\n        }))\n    }, [])\n\n    const logout = useCallback(() => {\n        setToken(null)\n        setUserId(null)\n        localStorage.removeItem(storageName)\n    }, [])\n\n    useEffect(() => {\n        const data = JSON.parse(localStorage.getItem(storageName))\n        if (data && data.token) {\n            login(data.token, data.userId)\n        }\n    }, [login])\n\n    return { login, logout, token, userId }\n}"]},"metadata":{},"sourceType":"module"}
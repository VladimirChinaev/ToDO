{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/StateButtons.jsx\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateButton = props => {\n  const removeItem = id => {\n    props.setTodos(prevState => prevState.filter(props => {\n      return props.id !== id;\n    }));\n  };\n\n  const makeComplete = id => {\n    props.setTodos(props.todos.map(todos => {\n      if (todos.id === id) {\n        return { ...todos,\n          status: \"Done\"\n        };\n      }\n\n      return todos;\n    }));\n  };\n\n  const edit = (cItem, e) => {\n    setSaveItem(props);\n\n    if (e.keyCode === 27) {\n      editItem([saveItem.id, saveItem.title]);\n      setCurrentTitle(props.title);\n      e.target.blur();\n    }\n\n    if (e.keyCode === 13) {\n      editItem([props.id, e.target.value]);\n      setCurrentTitle(props.title);\n      e.target.blur();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"buttonComplete\",\n        onChange: () => {\n          makeComplete(props.id);\n        }\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"\\uD83D\\uDDD1\",\n        className: \"buttonDelete\",\n        onClick: () => {\n          removeItem(props.id);\n        }\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StateButton;\nexport default StateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/StateButtons.jsx"],"names":["StateButton","props","removeItem","id","setTodos","prevState","filter","makeComplete","todos","map","status","edit","cItem","e","setSaveItem","keyCode","editItem","saveItem","title","setCurrentTitle","target","blur","value","date"],"mappings":";AAAA,OAAO,aAAP;;;AAEA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvBF,IAAAA,KAAK,CAACG,QAAN,CAAgBC,SAAD,IACXA,SAAS,CAACC,MAAV,CAAkBL,KAAD,IAAW;AACxB,aAAOA,KAAK,CAACE,EAAN,KAAaA,EAApB;AACH,KAFD,CADJ;AAKH,GAND;;AAQA,QAAMI,YAAY,GAAIJ,EAAD,IAAQ;AACzBF,IAAAA,KAAK,CAACG,QAAN,CACIH,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAiBD,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACL,EAAN,KAAaA,EAAjB,EAAqB;AACjB,eAAO,EAAE,GAAGK,KAAL;AAAYE,UAAAA,MAAM,EAAE;AAApB,SAAP;AACH;;AACD,aAAOF,KAAP;AACH,KALD,CADJ;AAQH,GATD;;AAYA,QAAMG,IAAI,GAAG,CAACC,KAAD,EAAQC,CAAR,KAAc;AACvBC,IAAAA,WAAW,CAACb,KAAD,CAAX;;AACA,QAAIY,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AAClBC,MAAAA,QAAQ,CAAC,CAACC,QAAQ,CAACd,EAAV,EAAcc,QAAQ,CAACC,KAAvB,CAAD,CAAR;AACAC,MAAAA,eAAe,CAAClB,KAAK,CAACiB,KAAP,CAAf;AACAL,MAAAA,CAAC,CAACO,MAAF,CAASC,IAAT;AACH;;AACD,QAAIR,CAAC,CAACE,OAAF,KAAc,EAAlB,EAAsB;AAClBC,MAAAA,QAAQ,CAAC,CAACf,KAAK,CAACE,EAAP,EAAWU,CAAC,CAACO,MAAF,CAASE,KAApB,CAAD,CAAR;AACAH,MAAAA,eAAe,CAAClB,KAAK,CAACiB,KAAP,CAAf;AACAL,MAAAA,CAAC,CAACO,MAAF,CAASC,IAAT;AACH;AACJ,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,gBAAjC;AAAiE,QAAA,QAAQ,EAAE,MAAM;AAC7Ed,UAAAA,YAAY,CAACN,KAAK,CAACE,EAAP,CAAZ;AACH;AAFD,SAAuDF,KAAK,CAACE,EAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACKF,KAAK,CAACiB;AADX;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAMjB,KAAK,CAACsB;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,cAA3B;AAAgC,QAAA,SAAS,EAAC,cAA1C;AAAwE,QAAA,OAAO,EAAE,MAAM;AACnFrB,UAAAA,UAAU,CAACD,KAAK,CAACE,EAAP,CAAV;AACH;AAFD,SAA8DF,KAAK,CAACE,EAApE;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtDD;;KAAMH,W;AAyDN,eAAeA,WAAf","sourcesContent":["import \"./style.css\"\n\nconst StateButton = (props) => {\n\n    const removeItem = (id) => {\n        props.setTodos((prevState) =>\n            prevState.filter((props) => {\n                return props.id !== id;\n            })\n        );\n    };\n\n    const makeComplete = (id) => {\n        props.setTodos(\n            props.todos.map((todos) => {\n                if (todos.id === id) {\n                    return { ...todos, status: \"Done\" };\n                }\n                return todos;\n            })\n        );\n    };\n\n\n    const edit = (cItem, e) => {\n        setSaveItem(props);\n        if (e.keyCode === 27) {\n            editItem([saveItem.id, saveItem.title]);\n            setCurrentTitle(props.title);\n            e.target.blur()\n        }\n        if (e.keyCode === 13) {\n            editItem([props.id, e.target.value]);\n            setCurrentTitle(props.title);\n            e.target.blur()\n        }\n    }\n\n    return (\n        <div className=\"todoElement\">\n            <div className=\"inElement\">\n                <input type=\"checkbox\" className=\"buttonComplete\" key={props.id} onChange={() => {\n                    makeComplete(props.id);\n                }} />\n                <div>\n                    {props.title}\n                </div>\n            </div>\n            <div className=\"inElement\">\n                <div>{props.date}</div>\n                <input type=\"button\" value=\"ðŸ—‘\" className=\"buttonDelete\" key={props.id} onClick={() => {\n                    removeItem(props.id);\n                }} />\n            </div>\n        </div>\n    )\n}\n\n\nexport default StateButton;"]},"metadata":{},"sourceType":"module"}
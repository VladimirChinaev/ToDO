{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport \"../css/style.css\";\nimport { useState } from \"react\"; // const StateButton = (props) => {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateButton = _ref => {\n  _s();\n\n  let {\n    todo,\n    setTodos,\n    filtered,\n    changeStatus\n  } = _ref;\n  const [currentTitle, setCurrentTitle] = useState(todo.title);\n  const [status, setStatus] = useState('');\n  console.log(todo); // useEffect(() => {\n  //     // setCurrentTitle(todo.title)\n  //     // setStatus(todo.status)\n  // }, [])\n\n  const editItem = (e, currentTitle, id) => {\n    console.log(e);\n    const item = filtered.find(el => el.id === id);\n    const oldName = item.title;\n    item.title = currentTitle;\n    const itemIndex = filtered.findIndex(el => el.id === id);\n\n    if (e.keyCode === 13) {\n      console.log('hello');\n      const arr = filtered;\n      arr[itemIndex] = item;\n      setTodos(arr);\n    }\n\n    if (e.keyCode === 27) {\n      e.target.blur();\n      setCurrentTitle(todo.title);\n    }\n  };\n\n  const removeItem = id => {\n    setTodos(prevState => prevState.filter(props => {\n      return id !== id;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"buttonComplete\",\n          checked: status === \"Done\" ? true : false,\n          onChange: () => {\n            let newStatus;\n\n            if (todo.status === \"Done\") {\n              newStatus = \"Undone\";\n            } else {\n              newStatus = \"Done\";\n            }\n\n            setStatus(newStatus);\n            changeStatus(newStatus, todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: currentTitle,\n            onKeyDown: e => editItem(e, currentTitle, todo.id),\n            onChange: e => setCurrentTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inElement\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"\\uD83D\\uDDD1\",\n          className: \"buttonDelete\",\n          onClick: () => {\n            removeItem(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, todo.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StateButton, \"qWhaT7yiz0lQ0crywF7hP4lMiGo=\");\n\n_c = StateButton;\nexport default StateButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateButton\");","map":{"version":3,"sources":["/home/user/Desktop/ToDO/todo/src/TodoList/StateButtons.jsx"],"names":["useState","StateButton","todo","setTodos","filtered","changeStatus","currentTitle","setCurrentTitle","title","status","setStatus","console","log","editItem","e","id","item","find","el","oldName","itemIndex","findIndex","keyCode","arr","target","blur","removeItem","prevState","filter","props","newStatus","value","date"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAA+C;AAChE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAACE,IAAI,CAACM,KAAN,CAAhD;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAHgE,CAKhE;AACA;AACA;AACA;;AAEA,QAAMW,QAAQ,GAAG,CAACC,CAAD,EAAIR,YAAJ,EAAkBS,EAAlB,KAAyB;AACtCJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,UAAME,IAAI,GAAGZ,QAAQ,CAACa,IAAT,CAAcC,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUA,EAA9B,CAAb;AACA,UAAMI,OAAO,GAAGH,IAAI,CAACR,KAArB;AACAQ,IAAAA,IAAI,CAACR,KAAL,GAAaF,YAAb;AACA,UAAMc,SAAS,GAAGhB,QAAQ,CAACiB,SAAT,CAAmBH,EAAE,IAAIA,EAAE,CAACH,EAAH,KAAUA,EAAnC,CAAlB;;AACA,QAAID,CAAC,CAACQ,OAAF,KAAc,EAAlB,EAAsB;AAClBX,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMW,GAAG,GAAGnB,QAAZ;AACAmB,MAAAA,GAAG,CAACH,SAAD,CAAH,GAAiBJ,IAAjB;AACAb,MAAAA,QAAQ,CAACoB,GAAD,CAAR;AACH;;AACD,QAAIT,CAAC,CAACQ,OAAF,KAAc,EAAlB,EAAsB;AAClBR,MAAAA,CAAC,CAACU,MAAF,CAASC,IAAT;AACAlB,MAAAA,eAAe,CAACL,IAAI,CAACM,KAAN,CAAf;AACH;AAEJ,GAjBD;;AAmBA,QAAMkB,UAAU,GAAIX,EAAD,IAAQ;AACvBZ,IAAAA,QAAQ,CAAEwB,SAAD,IACLA,SAAS,CAACC,MAAV,CAAkBC,KAAD,IAAW;AACxB,aAAOd,EAAE,KAAKA,EAAd;AACH,KAFD,CADI,CAAR;AAKH,GAND;;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,gBAAjC;AAAkD,UAAA,OAAO,EAAEN,MAAM,KAAK,MAAX,GAAoB,IAApB,GAA2B,KAAtF;AAA6F,UAAA,QAAQ,EAAE,MAAM;AACzG,gBAAIqB,SAAJ;;AACA,gBAAI5B,IAAI,CAACO,MAAL,KAAgB,MAApB,EAA4B;AACxBqB,cAAAA,SAAS,GAAG,QAAZ;AACH,aAFD,MAEO;AACHA,cAAAA,SAAS,GAAG,MAAZ;AACH;;AACDpB,YAAAA,SAAS,CAACoB,SAAD,CAAT;AACAzB,YAAAA,YAAY,CAACyB,SAAD,EAAY5B,IAAI,CAACa,EAAjB,CAAZ;AACH;AATD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,iCACI;AAAO,YAAA,KAAK,EAAET,YAAd;AAA4B,YAAA,SAAS,EAAGQ,CAAD,IAAOD,QAAQ,CAACC,CAAD,EAAIR,YAAJ,EAAkBJ,IAAI,CAACa,EAAvB,CAAtD;AAAkF,YAAA,QAAQ,EAAGD,CAAD,IAAOP,eAAe,CAACO,CAAC,CAACU,MAAF,CAASO,KAAV;AAAlH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAiBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAM7B,IAAI,CAAC8B;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,cAA3B;AAAgC,UAAA,SAAS,EAAC,cAA1C;AAAyD,UAAA,OAAO,EAAE,MAAM;AACpEN,YAAAA,UAAU,CAACxB,IAAI,CAACa,EAAN,CAAV;AACH;AAFD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAAUb,IAAI,CAACa,EAAf;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAjED;;GAAMd,W;;KAAAA,W;AAoEN,eAAeA,WAAf","sourcesContent":["import \"../css/style.css\"\nimport { useState } from \"react\";\n\n// const StateButton = (props) => {\nconst StateButton = ({ todo, setTodos, filtered, changeStatus }) => {\n    const [currentTitle, setCurrentTitle] = useState(todo.title);\n    const [status, setStatus] = useState('')\n    console.log(todo);\n\n    // useEffect(() => {\n    //     // setCurrentTitle(todo.title)\n    //     // setStatus(todo.status)\n    // }, [])\n\n    const editItem = (e, currentTitle, id) => {\n        console.log(e);\n        const item = filtered.find(el => el.id === id);\n        const oldName = item.title\n        item.title = currentTitle\n        const itemIndex = filtered.findIndex(el => el.id === id);\n        if (e.keyCode === 13) {\n            console.log('hello');\n            const arr = filtered\n            arr[itemIndex] = item\n            setTodos(arr);\n        }\n        if (e.keyCode === 27) {\n            e.target.blur();\n            setCurrentTitle(todo.title)\n        }\n\n    }\n\n    const removeItem = (id) => {\n        setTodos((prevState) =>\n            prevState.filter((props) => {\n                return id !== id;\n            })\n        );\n    };\n\n    return (\n        <div key={todo.id}>\n            <div className=\"todoElement\">\n                <div className=\"inElement\">\n                    <input type=\"checkbox\" className=\"buttonComplete\" checked={status === \"Done\" ? true : false} onChange={() => {\n                        let newStatus\n                        if (todo.status === \"Done\") {\n                            newStatus = \"Undone\";\n                        } else {\n                            newStatus = \"Done\"\n                        }\n                        setStatus(newStatus);\n                        changeStatus(newStatus, todo.id)\n                    }} />\n                    <div>\n                        <input value={currentTitle} onKeyDown={(e) => editItem(e, currentTitle, todo.id)} onChange={(e) => setCurrentTitle(e.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"inElement\">\n                    <div>{todo.date}</div>\n                    <input type=\"button\" value=\"ðŸ—‘\" className=\"buttonDelete\" onClick={() => {\n                        removeItem(todo.id);\n                    }} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default StateButton;"]},"metadata":{},"sourceType":"module"}